<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="i9.defence.platform.dao.mapper.ProjectMapper">
  <resultMap id="BaseResultMap" type="i9.defence.platform.model.Project">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="projectName" jdbcType="VARCHAR" property="projectName" />
    <result column="projectProvince" jdbcType="VARCHAR" property="projectProvince" />
    <result column="projectCity" jdbcType="VARCHAR" property="projectCity" />
    <result column="projectCounty" jdbcType="VARCHAR" property="projectCounty" />
    <result column="projectAddress" jdbcType="VARCHAR" property="projectAddress" />
    <result column="projectLongitude" jdbcType="DOUBLE" property="projectLongitude" />
    <result column="projectLatitude" jdbcType="DOUBLE" property="projectLatitude" />
    <result column="projectDate" jdbcType="TIMESTAMP" property="projectDate" />
    <result column="projectArea" jdbcType="DOUBLE" property="projectArea" />
    <result column="distributorId" jdbcType="INTEGER" property="distributorId" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="projectState" jdbcType="INTEGER" property="projectState" />
 	<result column="delCount" jdbcType="INTEGER" property="delCount"/> 
 	<result column="warningCount" jdbcType="INTEGER" property="warningCount"/>
 	<result column="projectStartDate" jdbcType="TIMESTAMP" property="projectStartDate"/>
  	<result column="projectEndDate" jdbcType="TIMESTAMP" property="projectEndDate"/>
  	<result column="sendStatus" jdbcType="INTEGER" property="sendStatus"/>
  	<result column="sendType" jdbcType="VARCHAR" property="sendType"/>
  	<result column="recipients" jdbcType="VARCHAR" property="recipients"/>
  	<result column="recipientphones" jdbcType="VARCHAR" property="recipientphones"/> 
  	<association property="distributor" column="distributorId" select="i9.defence.platform.dao.mapper.ManagerMapper.selectByPrimaryKey"/>
  	<!-- <association property="warningCount" column="id" select="selectEquipTypeCount"></association> -->
  	<collection property="clientList" column="id" select="i9.defence.platform.dao.mapper.ClientMapper.selectClientByProjectId"/>
  	<collection property="safeList" column="id" select="i9.defence.platform.dao.mapper.ManagerMapper.selectSafeByProjectId"/>
  </resultMap>
  
  <resultMap id="DetailResultMap" extends="BaseResultMap" type="i9.defence.platform.model.Project">
  	<collection property="equipmentStatis" column="id" select="selectEquipStatistic"></collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Query_By_Dto_Where_Clause">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
    	<if test="example.projectName != null and example.projectName != ''">
            OR (projectName like CONCAT('%',CONCAT('${example.projectName}','%'))
        </if>
        <if test="example.projectAddress != null and example.projectAddress != ''">
          OR projectAddress LIKE CONCAT('%',CONCAT('${example.projectAddress}','%')))
        </if>
        <if test="example.distributorId != null and example.distributorId != ''">
          AND distributorId = #{example.distributorId}
        </if>
        <if test="example.projectProvince != null and example.projectProvince != ''">
          AND projectProvince = #{example.projectProvince}
        </if>
        <if test="example.projectCity != null and example.projectCity != ''">
          AND projectCity = #{example.projectCity}
        </if>
        <if test="example.projectCounty != null and example.projectCounty != ''">
          AND projectCounty = #{example.projectCounty}
        </if>
    </trim>
  </sql>
  <sql id="Query_By_Dto2_Where_Clause">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
    	<if test="example.projectName != null and example.projectName != ''">
            OR (p.projectName like CONCAT('%',CONCAT('${example.projectName}','%'))
        </if>
        <if test="example.projectAddress != null and example.projectAddress != ''">
          OR p.projectAddress LIKE CONCAT('%',CONCAT('${example.projectAddress}','%')))
        </if>
        <if test="example.distributorId != null and example.distributorId != ''">
          AND (p.distributorId = #{example.distributorId} or (mg.parentId = #{example.distributorId} or mg.parentId in (select managerId from t_manager_grade where parentId = #{example.distributorId})))
        </if>
        <if test="example.projectProvince != null and example.projectProvince != ''">
          AND p.projectProvince = #{example.projectProvince}
        </if>
        <if test="example.projectCity != null and example.projectCity != ''">
          AND p.projectCity = #{example.projectCity}
        </if>
        <if test="example.projectCounty != null and example.projectCounty != ''">
          AND p.projectCounty = #{example.projectCounty}
        </if>
        <if test="example.projectManagerId != null and example.projectManagerId != ''">
          AND ps.managerId = #{example.projectManagerId} and p.projectState = 1
        </if>
    </trim>
  </sql>
  <sql id="Query_By_Dto3_Where_Clause">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
    	<if test="example.projectName != null and example.projectName != ''">
            OR p.projectName like CONCAT('%',CONCAT('${example.projectName}','%'))
        </if>
        <if test="example.projectProvince != null and example.projectProvince != ''">
          AND p.projectProvince = #{example.projectProvince}
        </if>
        <if test="example.projectCity != null and example.projectCity != ''">
          AND p.projectCity = #{example.projectCity}
        </if>
        <if test="example.projectManagerId != null and example.projectManagerId != ''">
          AND ps.managerId = #{example.projectManagerId}
        </if>
    </trim>
  </sql>
  <sql id="Query_By_Dto4_Where_Clause">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
        <if test="example.projectProvince != null and example.projectProvince != ''">
          	AND projectProvince = #{example.projectProvince}
        </if>
        <if test="example.projectCity != null and example.projectCity != ''">
          AND  projectCity = #{example.projectCity}
        </if>
    </trim>
  </sql>
  <sql id="Query_By_Dto5_Where_Clause">
        <if test="example.distributorId != null and example.distributorId != ''">
          AND (p.distributorId = #{example.distributorId} or (mg.parentId = #{example.distributorId} or mg.parentId in (select managerId from t_manager_grade where parentId = #{example.distributorId})))
        </if>
        <if test="example.projectManagerId != null and example.projectManagerId != ''">
          AND ps.managerId = #{example.projectManagerId} and p.projectState = 1
        </if>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, projectName, projectProvince, projectCity, projectCounty,projectAddress, projectLongitude, projectLatitude, projectDate, 
    projectArea, distributorId, remarks, projectState,projectStartDate,projectEndDate,sendStatus,sendType,recipientphones,recipients
  </sql>
  <select id="selectByExample" parameterType="i9.defence.platform.model.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.List">
    delete from t_project
    where id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
  </delete>
  <delete id="deleteByExample" parameterType="i9.defence.platform.model.ProjectExample">
    delete from t_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="i9.defence.platform.model.Project">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey> 
    insert into t_project (projectName, projectProvince, projectCity, projectCounty, projectAddress, projectLongitude, 
      projectLatitude, projectDate, projectArea, distributorId, remarks, projectState,projectStartDate,projectEndDate)
    values (#{projectName,jdbcType=VARCHAR}, #{projectProvince,jdbcType=VARCHAR}, #{projectCity,jdbcType=VARCHAR}, #{projectCounty,jdbcType=VARCHAR},#{projectAddress,jdbcType=VARCHAR}, #{projectLongitude,jdbcType=DOUBLE}, 
      #{projectLatitude,jdbcType=DOUBLE}, #{projectDate,jdbcType=TIMESTAMP}, #{projectArea,jdbcType=DOUBLE}, 
      #{distributorId,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{projectState,jdbcType=INTEGER},#{projectStartDate,jdbcType=TIMESTAMP},#{projectEndDate,jdbcType=TIMESTAMP},
      #{sendStatus,jdbcType=INTEGER},#{sendType,jdbcType=VARCHAR},#{recipients,jdbcType=VARCHAR},#{recipientphones,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="i9.defence.platform.model.Project">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectName != null">
        projectName,
      </if>
      <if test="projectProvince != null">
        projectProvince,
      </if>
      <if test="projectCity != null">
        projectCity,
      </if>
      <if test="projectCounty != null">
        projectCounty,
      </if>
      <if test="projectAddress != null">
        projectAddress,
      </if>
      <if test="projectLongitude != null">
        projectLongitude,
      </if>
      <if test="projectLatitude != null">
        projectLatitude,
      </if>
      <if test="projectDate != null">
        projectDate,
      </if>
      <if test="projectArea != null">
        projectArea,
      </if>
      <if test="distributorId != null">
        distributorId,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="projectState != null">
        projectState,
      </if>
      <if test="projectStartDate != null">
      projectStartDate,
      </if>
      <if test="projectEndDate != null">
      projectEndDate,
      </if>
      <if test="sendStatus != null">
      sendStatus,
      </if>
      <if test="sendType != null">
      sendType,
      </if>
      <if test="recipients != null">
      recipients,
      </if>
      <if test="recipientphones != null">
      recipientphones,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectProvince != null">
        #{projectProvince,jdbcType=VARCHAR},
      </if>
      <if test="projectCity != null">
        #{projectCity,jdbcType=VARCHAR},
      </if>
      <if test="projectCounty != null">
        #{projectCounty,jdbcType=VARCHAR},
      </if>
      <if test="projectAddress != null">
        #{projectAddress,jdbcType=VARCHAR},
      </if>
      <if test="projectLongitude != null">
        #{projectLongitude,jdbcType=DOUBLE},
      </if>
      <if test="projectLatitude != null">
        #{projectLatitude,jdbcType=DOUBLE},
      </if>
      <if test="projectDate != null">
        #{projectDate,jdbcType=TIMESTAMP},
      </if>
      <if test="projectArea != null">
        #{projectArea,jdbcType=DOUBLE},
      </if>
      <if test="distributorId != null">
        #{distributorId,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="projectState != null">
        #{projectState,jdbcType=INTEGER},
      </if>
      <if test="projectStartDate != null">
      	#{projectStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="projectEndDate != null">
      	#{projectEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sendStatus != null">
      	#{sendStatus,jdbcType=INTEGER},
      </if>
      <if test="sendType != null">
      	#{sendType,jdbcType=VARCHAR},
      </if>
      <if test="recipients != null">
      	#{recipients,jdbcType=VARCHAR},
      </if>
      <if test="recipientphones != null">
      	#{recipientphones,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" resultType="java.lang.Integer">
    select count(DISTINCT p.id) from t_project p left join t_project_safe ps on p.id = ps.projectId left join t_manager_grade mg on p.distributorId = mg.managerId
    <if test="_parameter != null" >
      <include refid="Query_By_Dto2_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_project
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectName != null">
        projectName = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectProvince != null">
        projectProvince = #{record.projectProvince,jdbcType=VARCHAR},
      </if>
      <if test="record.projectCity != null">
        projectCity = #{record.projectCity,jdbcType=VARCHAR},
      </if>
      <if test="record.projectCounty != null">
        projectCounty = #{record.projectCounty,jdbcType=VARCHAR},
      </if>
      <if test="record.projectAddress != null">
        projectAddress = #{record.projectAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.projectLongitude != null">
        projectLongitude = #{record.projectLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.projectLatitude != null">
        projectLatitude = #{record.projectLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.projectDate != null">
        projectDate = #{record.projectDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectArea != null">
        projectArea = #{record.projectArea,jdbcType=DOUBLE},
      </if>
      <if test="record.distributorId != null">
        distributorId = #{record.distributorId,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.projectState != null">
        projectState = #{record.projectState,jdbcType=INTEGER},
      </if>
      <if test="record.projectStartDate != null">
     	projectStartDate = #{record.projectStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectEndDate != null">
      	projectEndDate = #{record.projectEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sendStatus != null">
      	sendStatus = #{record.sendStatus,jdbcType=INTEGER},
      </if>
      <if test="record.sendType != null">
      	sendType = #{record.sendType,jdbcType=VARCHAR},
      </if>
      <if test="record.recipients != null">
      	recipients = #{record.recipients,jdbcType=VARCHAR},
      </if>
      <if test="record.recipientphones != null">
      	recipientphones = #{record.recipientphones,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_project
    set id = #{record.id,jdbcType=INTEGER},
      projectName = #{record.projectName,jdbcType=VARCHAR},
      projectProvince = #{record.projectProvince,jdbcType=VARCHAR},
      projectCity = #{record.projectCity,jdbcType=VARCHAR},
      projectCounty = #{record.projectCounty,jdbcType=VARCHAR},
      projectAddress = #{record.projectAddress,jdbcType=VARCHAR},
      projectLongitude = #{record.projectLongitude,jdbcType=DOUBLE},
      projectLatitude = #{record.projectLatitude,jdbcType=DOUBLE},
      projectDate = #{record.projectDate,jdbcType=TIMESTAMP},
      projectArea = #{record.projectArea,jdbcType=DOUBLE},
      distributorId = #{record.distributorId,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      projectState = #{record.projectState,jdbcType=INTEGER},
      projectStartDate = #{record.projectStartDate,jdbcType=TIMESTAMP},
      projectEndDate  = #{record.projectEndDate,jdbcType=TIMESTAMP},
      sendStatus = #{record.sendStatus,jdbcType=INTEGER},
      sendType = #{record.sendType,jdbcType=VARCHAR},
      recipients = #{record.recipients,jdbcType=VARCHAR},
      recipientphones = #{record.recipientphones,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="i9.defence.platform.model.Project">
    update t_project
    <set>
      <if test="projectName != null">
        projectName = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectProvince != null">
        projectProvince = #{projectProvince,jdbcType=VARCHAR},
      </if>
      <if test="projectCity != null">
        projectCity = #{projectCity,jdbcType=VARCHAR},
      </if>
      <if test="projectCounty != null">
        projectCounty = #{projectCounty,jdbcType=VARCHAR},
      </if>
      <if test="projectAddress != null">
        projectAddress = #{projectAddress,jdbcType=VARCHAR},
      </if>
      <if test="projectLongitude != null">
        projectLongitude = #{projectLongitude,jdbcType=DOUBLE},
      </if>
      <if test="projectLatitude != null">
        projectLatitude = #{projectLatitude,jdbcType=DOUBLE},
      </if>
      <if test="projectDate != null">
        projectDate = #{projectDate,jdbcType=TIMESTAMP},
      </if>
      <if test="projectArea != null">
        projectArea = #{projectArea,jdbcType=DOUBLE},
      </if>
      <if test="distributorId != null">
        distributorId = #{distributorId,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="projectState != null">
        projectState = #{projectState,jdbcType=INTEGER},
      </if>
      <if test="projectStartDate != null">
     	projectStartDate = #{projectStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="projectEndDate != null">
      	projectEndDate = #{projectEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sendStatus != null">
      	sendStatus = #{sendStatus,jdbcType=INTEGER},
      </if>
      <if test="sendType != null">
      	sendType = #{sendType,jdbcType=VARCHAR},
      </if>
      <if test="recipients != null">
      	recipients = #{recipients,jdbcType=VARCHAR},
      </if>
      <if test="recipientphones != null">
      	recipientphones = #{recipientphones,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="i9.defence.platform.model.Project">
    update t_project
    set projectName = #{projectName,jdbcType=VARCHAR},
      projectProvince = #{projectProvince,jdbcType=VARCHAR},
      projectCity = #{projectCity,jdbcType=VARCHAR},
      projectCounty = #{projectCounty,jdbcType=VARCHAR},
      projectAddress = #{projectAddress,jdbcType=VARCHAR},
      projectLongitude = #{projectLongitude,jdbcType=DOUBLE},
      projectLatitude = #{projectLatitude,jdbcType=DOUBLE},
      projectDate = #{projectDate,jdbcType=TIMESTAMP},
      projectArea = #{projectArea,jdbcType=DOUBLE},
      distributorId = #{distributorId,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      projectState = #{projectState,jdbcType=INTEGER},
      projectStartDate = #{projectStartDate,jdbcType=TIMESTAMP},
      projectEndDate  = #{projectEndDate,jdbcType=TIMESTAMP},
      sendStatus = #{sendStatus,jdbcType=INTEGER},
      sendType = #{sendType,jdbcType=VARCHAR},
      recipients = #{recipients,jdbcType=VARCHAR},
      recipientphones = #{recipientphones,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByLimitPage" resultMap="BaseResultMap">
        select DISTINCT <include refid="Base_Column_List" />,
        (select count(*)  from t_apply a where a.projectId=p.id) as delCount
        from t_project p left join t_project_safe ps on p.id = ps.projectId left join t_manager_grade mg on p.distributorId = mg.managerId
        <if test="_parameter != null" >
          <include refid="Query_By_Dto2_Where_Clause" />
        </if>
        <if test="example.orderByClause != null" >
          order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
   </select>
   <select id="findAllProjectIndex" resultMap="BaseResultMap">
   		select <include refid="Base_Column_List" />
        from t_project p left join t_project_safe ps on p.id = ps.projectId
        <if test="_parameter != null" >
          <include refid="Query_By_Dto3_Where_Clause" />
        </if>
   </select>
   <select id="selectAllProjectName" resultType="i9.defence.platform.dao.vo.ProjectSelectDto">
   		select id,projectName from t_project
   		<if test="_parameter != null" >
          <include refid="Query_By_Dto_Where_Clause" />
        </if>
   </select>
   <insert id="insertProjectEquipment">
		insert into t_project_equipment(projectId,equipmentId) values
        <foreach collection ="equipmentIds" item="equipmentId" index= "index" separator =",">
            (
            #{projectId}, #{equipmentId}
            )
        </foreach >
   </insert>
   <select id="selectAllEquipmentIds" resultType="java.lang.Integer" parameterType="java.lang.Integer">
   		select equipmentId from t_project_equipment where projectId = #{projectId}
   </select>
   <delete id="deleteClientByProjectId">
   		delete from t_project_client where projectId = #{projectId}
   </delete>
   <insert id="insertIntoClientByProjectId">
		insert into t_project_client(projectId,clientId) values
        <foreach collection ="clientIds" item="clientId" index= "index" separator =",">
            (
            #{projectId}, #{clientId}
            )
        </foreach >
   </insert>
   <update id="updateSafeZeroByProjectId">
   		update t_project_safe set safe = 0 where projectId = #{projectId}
   </update>
   <update id="updateSafeOneByProjectId">
   		update t_project_safe set safe = 1 where projectId = #{projectId} and managerId in
   		<foreach collection="safeIds" index="index" item="safeId" separator="," open="(" close=")">
            #{safeId}
        </foreach>
   </update>
   <select id="selectProject" resultMap="DetailResultMap">
   		select DISTINCT <include refid="Base_Column_List" /> from t_project p left join t_project_safe ps on p.id = ps.projectId left join t_manager_grade mg on p.distributorId = mg.managerId
        <if test="_parameter != null" >
          <include refid="Query_By_Dto2_Where_Clause" />
        </if>
   </select>
   <select id="selectWarningProjectIds" resultType="int">
   SELECT
		p.id 
	FROM
		t_project p
		LEFT JOIN t_project_safe ps ON p.id = ps.projectId
		LEFT JOIN t_manager_grade mg ON p.distributorId = mg.managerId 
	WHERE
		(
	SELECT
		count( * ) 
	FROM
		t_equipment e 
	WHERE
		e.projectId = p.id 
		AND e.dataStatus = 1 
		AND e.STATUS = 1 
		) 
   	<if test="_parameter != null" >
          <include refid="Query_By_Dto5_Where_Clause" />
        </if>
   </select>
   <select id="selectIdsByMonthDataDto" resultType="java.lang.Integer">
   		select id from t_project
        <if test="_parameter != null" >
          <include refid="Query_By_Dto4_Where_Clause" />
        </if>
   </select>
   <select id="selectEquipStatistic"  resultType="i9.defence.platform.dao.vo.EquipmentStatisticDto" parameterType="java.lang.Integer">
    select 
		 count(*) as equipCount,
		 ec.eqCategoryName as eqCategoryName
		 from t_equipment e left join t_equipment_category ec on e.systemId=ec.eqCategoryId
		 where e.projectId = #{id}
		 GROUP BY  e.equipmentCategoryId
   </select>
   
   <select id="selectEquipTypeCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
   		 select count(*) as warningCount
   		 from v_hiddendanger_edit he 
		 where he.projectId = #{id} and he.warningCount > 0
   </select>
    <select id="findProjectName" resultType="i9.defence.platform.model.Project">
   	select id , projectName from t_project
   </select>
   
    <select id="findProjectName2" parameterType="java.lang.Integer" resultType="i9.defence.platform.model.Project">
   		select p.* from t_project p where p.distributorId = #{id} or
				p.distributorId in (select managerId from t_manager_grade where
				parentId = #{id}) or
				p.distributorId in (select
				managerId from t_manager_grade where parentId in (select
				managerId
				from t_manager_grade where parentId = #{id}))
   </select>
   
    <select id="findProjectName3" parameterType="java.lang.Integer" resultType="i9.defence.platform.model.Project">
   		select p.* from t_project p  left join t_project_safe ps on p.id = ps.projectId where ps.managerId = #{id} and
				p.projectState = 1
   </select>
</mapper>