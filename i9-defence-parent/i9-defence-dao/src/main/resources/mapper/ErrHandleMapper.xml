<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="i9.defence.platform.dao.mapper.ErrHandleMapper">
  <resultMap id="BaseResultMap" type="i9.defence.platform.model.ErrHandle">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="handleCon" jdbcType="VARCHAR" property="handleCon" />
    <result column="handleManagerId" jdbcType="INTEGER" property="handleManagerId" />
    <result column="handleDate" jdbcType="TIMESTAMP" property="handleDate" />
    <result column="handleState" jdbcType="INTEGER" property="handleState" />
    <result column="eqDeviceId" jdbcType="VARCHAR" property="eqDeviceId" />
    <result column="eqAddRess" jdbcType="VARCHAR" property="eqAddRess" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="equipmentId" jdbcType="INTEGER" property="equipmentId"/>
    <association property="handleManager" column="handleManagerId" select="i9.defence.platform.dao.mapper.ManagerMapper.selectByPrimaryKey"/>
  	<association property="eqCategoryName" column="eqDeviceId" select="selectEqCategoryName"/>
  	<association property="projectName" column="eqDeviceId" select="selectProjectName"/>
  	<association property="equipmentRemarks" column="eqDeviceId" select="selectEquipmentRemarks"/>
  	<collection column="eqDeviceId"  property="eqChannelDataList" select="selectEqChannelDataFaultDto"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Query_By_Dto_Where_Clause">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
    	<if test="example.eqDeviceId != null and example.eqDeviceId != ''">
            OR eqDeviceId like CONCAT('%',CONCAT('${example.eqDeviceId}','%'))
        </if>
         <if test="example.handleState != null ">
          and handleState =#{example.handleState}
        </if>
        <!--  <if test="example.managerId != null and example.managerId != ''">
            AND handleManagerId in(select ps.managerId from t_project_safe ps left join t_project p on ps.projectId = p.id WHERE p.distributorId = #{example.managerId})
        </if>  -->
    </trim>
  </sql>
  <sql id="Base_Column_List">
    id, handleCon, handleManagerId, handleDate, handleState, eqDeviceId, eqAddRess,type
  </sql>
  <select id="selectByExample" parameterType="i9.defence.platform.model.ErrHandleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_err_handle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_err_handle
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_err_handle
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="i9.defence.platform.model.ErrHandleExample">
    delete from t_err_handle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="i9.defence.platform.model.ErrHandle">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_err_handle (handleCon, handleManagerId, handleDate, 
      handleState, eqDeviceId, eqAddRess,type
      )
    values (#{handleCon,jdbcType=VARCHAR}, #{handleManagerId,jdbcType=INTEGER}, #{handleDate,jdbcType=TIMESTAMP}, 
      #{handleState,jdbcType=INTEGER}, #{eqDeviceId,jdbcType=VARCHAR}, #{eqAddRess,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="i9.defence.platform.model.ErrHandle">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_err_handle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="handleCon != null">
        handleCon,
      </if>
      <if test="handleManagerId != null">
        handleManagerId,
      </if>
      <if test="handleDate != null">
        handleDate,
      </if>
      <if test="handleState != null">
        handleState,
      </if>
      <if test="eqDeviceId != null">
        eqDeviceId,
      </if>
      <if test="eqAddRess != null">
        eqAddRess,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="handleCon != null">
        #{handleCon,jdbcType=VARCHAR},
      </if>
      <if test="handleManagerId != null">
        #{handleManagerId,jdbcType=INTEGER},
      </if>
      <if test="handleDate != null">
        #{handleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="handleState != null">
        #{handleState,jdbcType=INTEGER},
      </if>
      <if test="eqDeviceId != null">
        #{eqDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="eqAddRess != null">
        #{eqAddRess,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
   <select id="countByExample"  resultType="java.lang.Integer">
    select count(*) from t_err_handle
    <if test="_parameter != null">
      <include refid="Query_By_Dto_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_err_handle
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.handleCon != null">
        handleCon = #{record.handleCon,jdbcType=VARCHAR},
      </if>
      <if test="record.handleManagerId != null">
        handleManagerId = #{record.handleManagerId,jdbcType=INTEGER},
      </if>
      <if test="record.handleDate != null">
        handleDate = #{record.handleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.handleState != null">
        handleState = #{record.handleState,jdbcType=INTEGER},
      </if>
      <if test="record.eqDeviceId != null">
        eqDeviceId = #{record.eqDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.eqAddRess != null">
        eqAddRess = #{record.eqAddRess,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_err_handle
    set id = #{record.id,jdbcType=INTEGER},
      handleCon = #{record.handleCon,jdbcType=VARCHAR},
      handleManagerId = #{record.handleManagerId,jdbcType=INTEGER},
      handleDate = #{record.handleDate,jdbcType=TIMESTAMP},
      handleState = #{record.handleState,jdbcType=INTEGER},
      eqDeviceId = #{record.eqDeviceId,jdbcType=VARCHAR},
      eqAddRess = #{record.eqAddRess,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="i9.defence.platform.model.ErrHandle">
    update t_err_handle
    <set>
      <if test="handleCon != null">
        handleCon = #{handleCon,jdbcType=VARCHAR},
      </if>
      <if test="handleManagerId != null">
        handleManagerId = #{handleManagerId,jdbcType=INTEGER},
      </if>
      <if test="handleDate != null">
        handleDate = #{handleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="handleState != null">
        handleState = #{handleState,jdbcType=INTEGER},
      </if>
      <if test="eqDeviceId != null">
        eqDeviceId = #{eqDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="eqAddRess != null">
        eqAddRess = #{eqAddRess,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="i9.defence.platform.model.ErrHandle">
    update t_err_handle
    set handleCon = #{handleCon,jdbcType=VARCHAR},
      handleManagerId = #{handleManagerId,jdbcType=INTEGER},
      handleDate = #{handleDate,jdbcType=TIMESTAMP},
      handleState = #{handleState,jdbcType=INTEGER},
      eqDeviceId = #{eqDeviceId,jdbcType=VARCHAR},
      eqAddRess = #{eqAddRess,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByLimitPage" resultMap="BaseResultMap">
        select DISTINCT <include refid="Base_Column_List" /> ,
	        (
				SELECT  e.id from t_equipment e where e.deviceId = eh.eqDeviceId
			) AS equipmentId
         from t_err_handle eh
        <if test="_parameter != null" >
          <include refid="Query_By_Dto_Where_Clause" />
        </if>
        <if test="example.orderByClause != null" >
          order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
   </select>
   <update id="updateHandleFault" parameterType="java.util.List">
   		update t_channel_data set dealStatus = 1 where deviceId in
   		<foreach collection="items" item="item" open="(" close=")" separator=",">
   			 #{item}
   		</foreach>
   		 and type = 0
   </update>
 	<update id="updateHandleHidden" parameterType="java.util.List">
   		update t_channel_data set dealStatus = 1 where deviceId in
   		<foreach collection="items" item="item" open="(" close=")" separator=",">
   			 #{item}
   		</foreach>
   		and type in (2,5) 
   </update>
   
   <update id="updateBatchHandleFault" parameterType="java.util.List">
   		update t_channel_data set dealStatus = 1 where deviceId in 
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
		 and type = 0
   </update>
   <update id="updateBatchHandlePolice" parameterType="java.util.List">
   		update t_channel_data set dealStatus = 1 where id in(select id from  v_hiddendanger_channel_data	where (value &gt;= WarningMax or  value &lt;= WarningMin)and deviceId
		deviceId in 
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
 		and dealStatus = 0)
   </update>
   <update id="updateBatchHandleHidden" parameterType="java.util.List">
   		update t_channel_data set dealStatus = 1 where id in(select id from  v_hiddendanger_channel_data	where ((value &gt; HiddenMax and value &lt; WarningMax)or(value &lt; HiddenMin and value &gt; WarningMin)) and 
		deviceId in 
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
 		and dealStatus = 0)
   </update>
   <insert id="addBatchHandle" parameterType="java.util.List">
   	insert into t_err_handle(eqDeviceId) values
   	<foreach collection="list" item="item" separator=",">
   		(#{item})
   	</foreach>
   </insert>
   <select id="selectEqCategoryName" parameterType="string" resultType="string">
   		select eqCategoryName from t_equipment_category where eqCategoryId = (select systemId from t_equipment where deviceId = #{deviceId})
   </select>
   <select id="selectProjectName" resultType="string" parameterType="string">
   		select projectName from t_project where id = (select projectId from t_equipment where deviceId = #{deviceId})
   </select>
   <select id="selectEquipmentRemarks" resultType="string" parameterType="string">
   		select equipmentRemarks from t_equipment where deviceId = #{deviceId}
   </select>
   
   <insert id="addErrHandles" parameterType="java.util.List">
   		insert into t_err_handle(handleCon,handleManagerId,handleDate,handleState,eqDeviceId,eqAddRess,type)
   		values 
   		<foreach collection="items" item="item" index="index" separator=",">
   			(#{item.handleCon},#{item.handleManagerId},#{item.handleDate},#{item.handleState},#{item.eqDeviceId},#{item.eqAddRess},#{item.type})
   		</foreach>
   </insert>
   <update id="updateErrHandles" parameterType="java.util.List">
   		update t_err_handle
   		<trim prefix="set" suffixOverrides=",">
   			<trim prefix="handleManagerId =case" suffix="end,">
   				<foreach collection="errHandles" item="item" index="index">
   					when eqDeviceId=#{item.eqDeviceId} then #{item.handleManagerId}
   				</foreach>
   			</trim>
   			<trim prefix="handleDate =case" suffix="end,">
   				<foreach collection="errHandles" item="item" index="index">
   					when eqDeviceId=#{item.eqDeviceId} then #{item.handleDate}
   				</foreach>
   			</trim>
   			<trim prefix="handleState =case" suffix="end,">
   				<foreach collection="errHandles" item="item" index="index">
   					when eqDeviceId=#{item.eqDeviceId} then #{item.handleState}
   				</foreach>
   			</trim>
   			<trim prefix="handleCon =case" suffix="end,">
   				<foreach collection="errHandles" item="item" index="index">
   					when eqDeviceId=#{item.eqDeviceId} then #{item.handleCon}
   				</foreach>
   			</trim>
   		</trim>
   		<where>
   			<foreach collection="errHandles" separator="or" item="item" index="index"  open="(" close=")">
                        eqDeviceId=#{item.eqDeviceId}
            </foreach>
   		</where>
   </update>
   <select id="selectEqChannelDataFaultDto" parameterType="java.lang.String" resultType="i9.defence.platform.dao.vo.EqChannelDataDto">
		SELECT (select p.`name` from `t_passageway` `p` where p.channel = cd.channel and p.systemId = e.systemId) AS `channelName`, `cd`.`channel` AS `channelNum`,`cd`.`value` AS `channelValue`,e.equipmentCategoryId as equipmentCategoryId,cd.type as type
		FROM `t_channel_data` `cd`
			LEFT JOIN `t_equipment` `e` ON `e`.`deviceId` = `cd`.`deviceId`
			
		WHERE `e`.`deviceId` = #{deviceId} 
			AND cd.channel IN ( SELECT channel FROM  t_passageway where systemId = (select systemId from t_equipment where deviceId = #{deviceId} )) 
			and cd.type = 0
			AND `cd`.`dateTime` = (
				SELECT `t_channel_data`.`dateTime`
				FROM `t_channel_data`
				WHERE `t_channel_data`.`deviceId` = (
					SELECT `t_equipment`.`deviceId`
					FROM `t_equipment`
					WHERE `t_equipment`.`deviceId` = #{deviceId}
				)
				ORDER BY `t_channel_data`.`id` DESC
				LIMIT 1
			)
		ORDER BY `cd`.`channel`
	</select>
</mapper>