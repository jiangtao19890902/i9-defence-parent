<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="i9.defence.platform.dao.mapper.EquipmentMapper">
  <resultMap id="BaseResultMap" type="i9.defence.platform.model.Equipment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="equipmentName" jdbcType="VARCHAR" property="equipmentName" />
    <result column="equipmentNum" jdbcType="INTEGER" property="equipmentNum" />
    <result column="equipmentIdentifier" jdbcType="VARCHAR" property="equipmentIdentifier" />
    <result column="equipmentPosition" jdbcType="VARCHAR" property="equipmentPosition" />
    <result column="equipmentDate" jdbcType="TIMESTAMP" property="equipmentDate" />
    <result column="equipmentRemarks" jdbcType="VARCHAR" property="equipmentRemarks" />
    <result column="equipmentCategoryId" jdbcType="INTEGER" property="equipmentCategoryId" />
    <result column="projectId" jdbcType="INTEGER" property="projectId" />
    <result column="systemId" jdbcType="VARCHAR" property="systemId" />
    <result column="deviceId" jdbcType="VARCHAR" property="deviceId" />
    <result column="unit" jdbcType="INTEGER" property="unit" />
    <result column="loopl" jdbcType="INTEGER" property="loopl" />
    <result column="delStatus" jdbcType="INTEGER" property="delStatus" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="dataStatus" jdbcType="INTEGER" property="dataStatus" />
    <association property="equipmentSystemtype" column="equipmentCategoryId" select="i9.defence.platform.dao.mapper.EquipmentSystemtypeMapper.selectByPrimaryKey"></association>
    <association property="equipmentCategory" column="systemId" select="i9.defence.platform.dao.mapper.EquipmentCategoryMapper.selectByeqEqCategoryId"></association>
    <association property="project" column="projectId" select="i9.defence.platform.dao.mapper.ProjectMapper.selectByPrimaryKey"></association>
  	<!-- <collection column="systemId" ofType="i9.defence.platform.model.Passageway" property="passageways" select="i9.defence.platform.dao.mapper.PassagewayMapper.selectPassagewaysBySystemId"></collection> -->
  	<!-- <collection column="id"  property="eqChannelDataList" select="selectEqChannelDataDto"></collection> -->
  </resultMap>
  <resultMap id="BaseResultMapDto" type="i9.defence.platform.dao.vo.HiddenDangerDto">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="equipmentName" jdbcType="VARCHAR" property="equipmentName" />
    <result column="equipmentPosition" jdbcType="VARCHAR" property="equipmentPosition" />
    <result column="deviceId" jdbcType="VARCHAR" property="deviceId" />
    <result column="projectName" jdbcType="VARCHAR" property="projectName" />
    <result column="hiddeCount" jdbcType="INTEGER" property="hiddeCount" />
    <result column="warningCount" jdbcType="INTEGER" property="warningCount" />
    <result column="eqCategoryName" jdbcType="VARCHAR" property="eqCategoryName" />
    <result column="personLiableMan" jdbcType="VARCHAR" property="personLiableMan" />
    <result column="equipmentRemarks" jdbcType="VARCHAR" property="equipmentRemarks"/>
    <result column="newestTime" jdbcType="VARCHAR" property="newestTime" />
    <collection column="id"  property="eqChannelDataList" select="selectEqChannelDataDto"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
    <sql id="Query_By_Dto_Where_Clause">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
        <if test="example.equipmentName != null and example.equipmentName != ''">
         OR( equipmentName LIKE CONCAT('%',CONCAT('${example.equipmentName}','%'))
        </if>
        <if test="example.equipmentIdentifier != null and example.equipmentIdentifier != ''">
          OR equipmentIdentifier LIKE CONCAT('%',CONCAT('${example.equipmentIdentifier}','%'))
        </if>
        <if test="example.equipmentPosition != null and example.equipmentPosition != ''">
          OR equipmentPosition LIKE CONCAT('%',CONCAT('${example.equipmentPosition}','%')))
        </if>
    </trim>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, systemId, equipmentName, equipmentNum, equipmentIdentifier, equipmentPosition, 
    equipmentDate, equipmentRemarks, equipmentCategoryId, projectId, unit, loopl, delStatus, 
    deviceId, status, dataStatus
  </sql>
  <select id="selectByExample" parameterType="i9.defence.platform.model.EquipmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_equipment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.List" >
    delete from t_equipment
    where id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
  </delete>
  <delete id="deleteByExample" parameterType="i9.defence.platform.model.EquipmentExample">
    delete from t_equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="i9.defence.platform.model.Equipment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
     insert into t_equipment (systemId, equipmentName, equipmentNum, 
      equipmentIdentifier, equipmentPosition, 
      equipmentDate, equipmentRemarks, equipmentCategoryId, 
      projectId, unit, loopl, 
      delStatus, deviceId, status, 
      dataStatus)
    values (#{systemId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, #{equipmentNum,jdbcType=INTEGER}, 
      #{equipmentIdentifier,jdbcType=VARCHAR}, #{equipmentPosition,jdbcType=VARCHAR}, 
      #{equipmentDate,jdbcType=TIMESTAMP}, #{equipmentRemarks,jdbcType=VARCHAR}, #{equipmentCategoryId,jdbcType=INTEGER}, 
      #{projectId,jdbcType=INTEGER}, #{unit,jdbcType=INTEGER}, #{loopl,jdbcType=INTEGER}, 
      #{delStatus,jdbcType=INTEGER}, #{deviceId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{dataStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="i9.defence.platform.model.Equipment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_equipment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="equipmentName != null">
        equipmentName,
      </if>
      <if test="equipmentNum != null">
        equipmentNum,
      </if>
      <if test="equipmentIdentifier != null">
        equipmentIdentifier,
      </if>
      <if test="equipmentPosition != null">
        equipmentPosition,
      </if>
      <if test="equipmentDate != null">
        equipmentDate,
      </if>
      <if test="equipmentRemarks != null">
        equipmentRemarks,
      </if>
      <if test="equipmentCategoryId != null">
        equipmentCategoryId,
      </if>
      <if test="projectId != null">
        projectId,
      </if>
       <if test="systemId != null">
        systemId,
      </if>
       <if test="unit != null">
        unit,
      </if>
       <if test="loopl != null"> 
        loopl, 
      </if>
       <if test="delStatus != null"> 
        delStatus, 
      </if>
       <if test="deviceId != null"> 
        deviceId, 
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="dataStatus != null">
        dataStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="equipmentName != null">
        #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentNum != null">
        #{equipmentNum,jdbcType=INTEGER},
      </if>
      <if test="equipmentIdentifier != null">
        #{equipmentIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="equipmentPosition != null">
        #{equipmentPosition,jdbcType=VARCHAR},
      </if>
      <if test="equipmentDate != null">
        #{equipmentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="equipmentRemarks != null">
        #{equipmentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="equipmentCategoryId != null">
        #{equipmentCategoryId,jdbcType=INTEGER},
      </if>
       <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
       <if test="systemId != null">
        #{systemId,jdbcType=VARCHAR},
      </if>
       <if test="unit != null">
        #{unit,jdbcType=INTEGER},
      </if> 
      <if test="loopl != null">
        #{loopl,jdbcType=INTEGER},
      </if>
      <if test="delStatus != null">
        #{delStatus,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="dataStatus != null">
        #{dataStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample"  resultType="java.lang.Integer">
    select count(*) from t_equipment
    <if test="_parameter != null">
      <include refid="Query_By_Dto_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_equipment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.systemId != null">
        systemId = #{record.systemId,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentName != null">
        equipmentName = #{record.equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentNum != null">
        equipmentNum = #{record.equipmentNum,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentIdentifier != null">
        equipmentIdentifier = #{record.equipmentIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentPosition != null">
        equipmentPosition = #{record.equipmentPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentDate != null">
        equipmentDate = #{record.equipmentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.equipmentRemarks != null">
        equipmentRemarks = #{record.equipmentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentCategoryId != null">
        equipmentCategoryId = #{record.equipmentCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentCategoryId != null">
        equipmentCategoryId = #{record.equipmentCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        projectId = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=INTEGER},
      </if>
      <if test="record.loopl != null">
        loopl = #{record.loopl,jdbcType=INTEGER},
      </if>
      <if test="record.delStatus != null">
        delStatus = #{record.delStatus,jdbcType=INTEGER},
      </if>
      <if test="record.deviceId != null">
        deviceId = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.dataStatus != null">
        dataStatus = #{record.dataStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_equipment
    set id = #{record.id,jdbcType=INTEGER},
      systemId = #{record.systemId,jdbcType=VARCHAR},
      equipmentName = #{record.equipmentName,jdbcType=VARCHAR},
      equipmentNum = #{record.equipmentNum,jdbcType=INTEGER},
      equipmentIdentifier = #{record.equipmentIdentifier,jdbcType=VARCHAR},
      equipmentPosition = #{record.equipmentPosition,jdbcType=VARCHAR},
      equipmentDate = #{record.equipmentDate,jdbcType=TIMESTAMP},
      equipmentRemarks = #{record.equipmentRemarks,jdbcType=VARCHAR},
      equipmentCategoryId = #{record.equipmentCategoryId,jdbcType=INTEGER},
      projectId = #{record.projectId,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=INTEGER},
      loopl = #{record.loopl,jdbcType=INTEGER},
      delStatus = #{record.delStatus,jdbcType=INTEGER},
      deviceId = #{record.deviceId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      dataStatus = #{record.dataStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="i9.defence.platform.model.Equipment">
    update t_equipment
    <set>
      <if test="equipmentName != null">
        equipmentName = #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentNum != null">
        equipmentNum = #{equipmentNum,jdbcType=INTEGER},
      </if>
      <if test="equipmentIdentifier != null">
        equipmentIdentifier = #{equipmentIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="equipmentPosition != null">
        equipmentPosition = #{equipmentPosition,jdbcType=VARCHAR},
      </if>
      <if test="equipmentDate != null">
        equipmentDate = #{equipmentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="equipmentRemarks != null">
        equipmentRemarks = #{equipmentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="equipmentCategoryId != null">
        equipmentCategoryId = #{equipmentCategoryId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
       <if test="systemId != null">
        systemId = #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="loopl != null">
        loopl = #{loopl,jdbcType=INTEGER},
      </if>
       <if test="delStatus != null">
        delStatus = #{delStatus,jdbcType=INTEGER},
      </if>
       <if test="deviceId != null">
        deviceId = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="dataStatus != null">
        dataStatus = #{dataStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="i9.defence.platform.model.Equipment">
     update t_equipment
    set systemId = #{systemId,jdbcType=VARCHAR},
      equipmentName = #{equipmentName,jdbcType=VARCHAR},
      equipmentNum = #{equipmentNum,jdbcType=INTEGER},
      equipmentIdentifier = #{equipmentIdentifier,jdbcType=VARCHAR},
      equipmentPosition = #{equipmentPosition,jdbcType=VARCHAR},
      equipmentDate = #{equipmentDate,jdbcType=TIMESTAMP},
      equipmentRemarks = #{equipmentRemarks,jdbcType=VARCHAR},
      equipmentCategoryId = #{equipmentCategoryId,jdbcType=INTEGER},
      projectId = #{projectId,jdbcType=INTEGER},
      unit = #{unit,jdbcType=INTEGER},
      loopl = #{loopl,jdbcType=INTEGER},
      delStatus = #{delStatus,jdbcType=INTEGER},
      deviceId = #{deviceId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      dataStatus = #{dataStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByLimitPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from t_equipment
        <if test="_parameter != null" >
          <include refid="Query_By_Dto_Where_Clause" />
        </if>
        <if test="example.orderByClause != null" >
          order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
   </select>
   <select id="selectByLimitPage2" resultMap="BaseResultMap">
       <!--  select e.id as id, e.equipmentName as equipmentName, e.equipmentNum as equipmentNum, e.equipmentIdentifier as equipmentIdentifier, e.equipmentPosition as equipmentPosition, e.equipmentDate as equipmentDate, 
    e.equipmentRemarks as equipmentRemarks, e.equipmentCategoryId as equipmentCategoryId,e.projectId as projectId,e.systemId as systemId,e.unit as unit,e.loopl as loopl,e.delStatus as delStatus,e.deviceId as deviceId from t_equipment e left join t_project p on e.projectId = p.id  -->
        select e.* from  t_equipment e left join t_project p on p.id = e.projectId
        <if test="_parameter != null" >
          <include refid="Query_By_Dto_Where_Clause2" />
        </if>
        <if test="example.orderByClause != null" >
          order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
   </select>
   
   <select id="countByExample2"  resultType="java.lang.Integer">
    select count(*) from  t_equipment e left join t_project p on p.id = e.projectId 
    <if test="_parameter != null">
      <include refid="Query_By_Dto_Where_Clause2" />
    </if>
  </select>
   
   <select id="countByExample3"  resultType="java.lang.Integer">
    select count(*) from  t_equipment e left join t_project p on p.id = e.projectId left join t_project_safe ps on p.id = ps.projectId 
    <if test="_parameter != null">
      <include refid="Query_By_Dto_Where_Clause3" />
    </if>
  </select>
   
   <select id="selectByLimitPage3" resultMap="BaseResultMap">
        select e.* from  t_equipment e left join t_project p on p.id = e.projectId left join t_project_safe ps on p.id = ps.projectId 
        <if test="_parameter != null" >
          <include refid="Query_By_Dto_Where_Clause3" />
        </if>
        <if test="example.orderByClause != null" >
          order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
   </select>
   
   <sql id="Query_By_Dto_Where_Clause2">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
        <if test="example.equipmentName != null and example.equipmentName != ''">
         OR( equipmentName LIKE CONCAT('%',CONCAT('${example.equipmentName}','%'))
        </if>
        <if test="example.equipmentIdentifier != null and example.equipmentIdentifier != ''">
          OR equipmentIdentifier LIKE CONCAT('%',CONCAT('${example.equipmentIdentifier}','%'))
        </if>
        <if test="example.equipmentPosition != null and example.equipmentPosition != ''">
          OR equipmentPosition LIKE CONCAT('%',CONCAT('${example.equipmentPosition}','%'))
        </if>
        <if test="example.equipmentPosition != null and example.equipmentPosition != ''">
          OR equipmentPosition LIKE CONCAT('%',CONCAT('${example.equipmentPosition}','%')))
        </if>
       <if test="example.distributorId != null and example.distributorId != ''">
          AND p.distributorId = #{example.distributorId}
        </if>
        <!-- and p.distributorId = #{distributorId,jdbcType=INTEGER} -->
    </trim>
  </sql>
  
  <sql id="Query_By_Dto_Where_Clause3">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
        <if test="example.equipmentName != null and example.equipmentName != ''">
         OR( e.equipmentName LIKE CONCAT('%',CONCAT('${example.equipmentName}','%'))
        </if>
        <if test="example.equipmentIdentifier != null and example.equipmentIdentifier != ''">
          OR e.equipmentIdentifier LIKE CONCAT('%',CONCAT('${example.equipmentIdentifier}','%'))
        </if>
        <if test="example.equipmentPosition != null and example.equipmentPosition != ''">
          OR e.equipmentPosition LIKE CONCAT('%',CONCAT('${example.equipmentPosition}','%')))
        </if>
        <if test="example.projectManagerId != null and example.projectManagerId != ''">
          AND ps.managerId = #{example.projectManagerId} and p.projectState = 1
        </if>
    </trim>
  </sql>
   <select id="selectPassagewayByEid" resultType="i9.defence.platform.model.Passageway">
   select channel,name,deviceId,hiddenDangerId
    from  t_passageway	
     where deviceId=#{deviceId}  
   </select>
   
   <insert id="insertPassageWay" parameterType="i9.defence.platform.model.Passageway">
   	insert into t_passageway(channel,name,deviceId,hiddenDangerId) values(#{channel},#{name},#{deviceId},#{hiddenDangerId})
   </insert>
   
   <update id="updateEquipments" parameterType="java.util.List">
   	update  t_equipment
	<trim prefix="set" suffixOverrides=",">
		<trim prefix="delStatus =case" suffix="end,">
			<foreach collection="applies" item="item">
				when id=#{item.id} then #{item.delStatus}
			</foreach>
		</trim>
	</trim>	
	<where>
		<foreach collection="applies" separator="or" item="item" >
			id=#{item.id}
		</foreach>
	</where>
   </update>
   <!-- ———————————— 批量添加设备———————————— -->
   <insert id="insertEquipments" parameterType="java.util.List" useGeneratedKeys="true"
    keyProperty="id">
		insert into t_equipment (equipmentName,systemId, equipmentDate,equipmentRemarks,
		equipmentCategoryId, projectId) values
		<foreach collection="list" item="item" separator=",">
			(#{item.equipmentName},#{item.systemId},#{item.equipmentDate},#{item.equipmentRemarks},#{item.equipmentCategoryId},#{item.projectId})
		</foreach>
	</insert>
	
   <update id="updateEquipmentByIds">
	 update t_equipment SET 
	equipmentPosition = CASE id 
		<foreach collection="list" item="item">
			WHEN #{item.id} THEN #{item.equipmentPosition} 
		</foreach>
        END, 
    equipmentName = CASE id 
       <foreach collection="list" item="item">
			WHEN #{item.id} THEN #{item.equipmentName} 
		</foreach>
        END,
    deviceId = CASE id 
       <foreach collection="list" item="item">
			WHEN #{item.id} THEN #{item.deviceId} 
		</foreach>
        END
	where id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">
   	 	#{item.id}
    </foreach>
	</update>

	<!-- ———————————— 隐患与报警———————————— -->

		<select id="countHiddenDangerByExample" resultType="java.lang.Integer">
			select count(*) from v_hiddenDanger_edit
			<if test="_parameter != null">
				<include refid="Query_HiddenDanger_By_Dto_Where_Clause" />
			</if>
		</select>
		
		<select id="countHiddenDangerByExample2" resultType="java.lang.Integer">
			select count(*) from v_hiddenDanger_edit
			<if test="_parameter != null">
				<include refid="Query_HiddenDanger_By_Dto_Where_Clause2" />
			</if>
		</select>
		
		<sql id="Query_HiddenDanger_By_Dto_Where_Clause">
			<trim prefix="WHERE" prefixOverrides="AND|OR">
				<!--根据项目名称 模糊搜索  -->	
				<if test="example.projectId != null">
					and projectId = #{example.projectId}
				</if>
				<!--根据设备类型 模糊搜索  -->	
				<if test="example.eqCategoryName != null and example.eqCategoryName != ''">
					and eqCategoryName ='${example.eqCategoryName}'
				</if>
				<!--根据项目所在省 模糊搜索  -->	
				<if test="example.projectProvince != null and example.projectProvince != ''">
					and projectProvince ='${example.projectProvince}'
				</if>
				<!--根据项目所在市 模糊搜索  -->	
				<if test="example.projectCity != null and example.projectCity != ''">
					and projectCity ='${example.projectCity}'
				</if>
				<!--根据项目所在县/区 模糊搜索  -->	
				<if test="example.projectCounty != null and example.projectCounty != ''">
					and projectCounty ='${example.projectCounty}'
				</if>
				<!--隐患不为0  -->	
				<if test="example.hidden != null and example.hidden != ''">
					and hiddeCount != 0 and warningCount = 0 
				</if>
				<!--报警不为0  -->	
				<if test="example.danger != null and example.danger != ''">
					and warningCount != 0 
				</if>
				<!--隐患或报警大于0  -->	
				<if test="example.hiddenCount1 != null">
					and (hiddeCount > 0 or warningCount > 0 )
				</if>
				<!--项目负责人  -->	
				<if test="example.prijrctManagerId != null and example.prijrctManagerId != ''">
					and projectId in (select projectId from t_project_safe where managerId = '${example.prijrctManagerId}')
				</if>
				<!--经销商  -->	
				<if test="example.distributorId != null and example.distributorId != ''">
					and distributorId ='${example.distributorId}'
				</if>
				<if test="example.systemId != null">
					and systemId = #{example.systemId}
				</if>
				<!-- <if test="example.startDate != null and example.startDate != ''">
					and example.startDate &lt; equipmentDate
				</if>
				<if test="example.endDate != null and example.endDate != ''">
					and example.endDate &gt; equipmentDate
				</if> -->
			</trim>
		</sql>
		
		<sql id="Query_HiddenDanger_By_Dto_Where_Clause2">
			<trim prefix="WHERE" prefixOverrides="AND|OR">
				<!--根据项目名称 模糊搜索  -->	
				<if test="example.projectId != null">
					and projectId = #{example.projectId}
				</if>
				<!--根据设备类型 模糊搜索  -->	
				<if test="example.eqCategoryName != null and example.eqCategoryName != ''">
					and eqCategoryName ='${example.eqCategoryName}'
				</if>
				<!--根据项目所在省 模糊搜索  -->	
				<if test="example.projectProvince != null and example.projectProvince != ''">
					and projectProvince ='${example.projectProvince}'
				</if>
				<!--根据项目所在市 模糊搜索  -->	
				<if test="example.projectCity != null and example.projectCity != ''">
					and projectCity ='${example.projectCity}'
				</if>
				<!--根据项目所在县/区 模糊搜索  -->	
				<if test="example.projectCounty != null and example.projectCounty != ''">
					and projectCounty ='${example.projectCounty}'
				</if>
				<!--隐患不为0  -->	
				<if test="example.hidden != null and example.hidden != ''">
					and hiddeCount != 0 and warningCount = 0 
				</if>
				<!--报警不为0  -->	
				<if test="example.danger != null and example.danger != ''">
					and warningCount != 0 
				</if>
				<!--隐患或报警大于0  -->	
				<if test="example.hiddenCount1 != null">
					and (hiddeCount > 0 or warningCount > 0 )
				</if>
				<!--项目负责人  -->	
				<if test="example.prijrctManagerId != null and example.prijrctManagerId != ''">
					and projectId in (select projectId from t_project_safe where managerId = '${example.prijrctManagerId}')
				</if>
				<!--经销商  -->	
				<if test="example.distributorId != null and example.distributorId != ''">
					and distributorId ='${example.distributorId}'
				</if>
				<if test="example.systemId != null">
					and systemId = #{example.systemId}
				</if>
				<!-- <if test="example.startDate != null and example.startDate != ''">
					and example.startDate &lt; equipmentDate
				</if>
				<if test="example.endDate != null and example.endDate != ''">
					and example.endDate &gt; equipmentDate
				</if> -->
				and (status=0) or (status=1 and warningCount+hiddeCount!=0)
			</trim>
		</sql>
		
		
		<select id="selectAllHiddenDangerEdit" resultType="i9.defence.platform.dao.vo.HiddenDangerDto">
			select id,deviceId,equipmentName,equipmentPosition,eqCategoryName,equipmentRemarks,projectName,hiddeCount,personLiableMan,warningCount,status from v_hiddenDanger_edit
			<if test="_parameter != null">
				<include refid="Query_HiddenDanger_By_Dto_Where_Clause" />
			</if>
			<if test="example.orderByClause != null">
				order by ${example.orderByClause}
			</if>
		</select>
		<!-- 分页查询 -->
		<select  id="selectHiddenDangerByLimitPage" resultMap="BaseResultMapDto">
		select id,deviceId,equipmentName,equipmentPosition,equipmentRemarks,eqCategoryName,projectName,hiddeCount,personLiableMan,warningCount,status from v_hiddenDanger_edit
		<if test="_parameter != null">
				<include refid="Query_HiddenDanger_By_Dto_Where_Clause" />
			</if>
			<if test="example.orderByClause != null">
				order by ${example.orderByClause}
			</if>
		limit #{offset},#{limit}
		</select>
		
		<select id="selectHiddenDangerByLimitPage2" resultMap="BaseResultMapDto">
			SELECT
				id,
				deviceId,
				equipmentRemarks,
				eqCategoryName,
				projectName,
				hiddeCount,
				warningCount,
				status,
			CASE
				WHEN warningCount > 0 
				THEN
				getNewestTime ( deviceId )	 
				WHEN warningCount =0 and hiddeCount >0 
				THEN
				getNewestHiddenTime(deviceId,systemId)
				WHEN warningCount =0 and hiddeCount =0
				THEN
				getLiXianTime( deviceId)
				End as newestTime
			FROM 
			v_hiddendanger_edit he 
			<if test="_parameter != null">
				<include refid="Query_HiddenDanger_By_Dto_Where_Clause2" />
			</if>
			<if test="example.orderByClause != null">
				order by ${example.orderByClause}
			</if>
			limit #{offset},#{limit}
		</select>
		<select id="selectHiddenDangerByIds" resultMap="BaseResultMapDto" parameterType="java.util.List">	
			SELECT
				deviceId,
				equipmentPosition,
				warningCount,
				hiddeCount 
			FROM
				v_hiddendanger_edit 
			WHERE id in
				<foreach collection="Items" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
		</select>
		<select id="selectHiddenDangerByDevicedIds" resultMap="BaseResultMapDto" parameterType="java.util.List">	
			SELECT
				deviceId,
				equipmentPosition,
				warningCount,
				hiddeCount 
			FROM
				v_hiddendanger_edit 
			WHERE deviceId in
				<foreach collection="Items" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
		</select>
		
		
		
		<!-- 查询具体隐患报警    查看隐患-->
		 <select id="selectHiddenDangerChannelDtoBySid" resultType="i9.defence.platform.dao.vo.HiddenDangerChannelDto">
			  SELECT cd.*
			FROM `t_channel_data` `cd`
				LEFT JOIN `t_passageway` `ps`
				ON `cd`.`systemId` = `ps`.`systemId`
					AND `cd`.`channel` = `ps`.`channel`
				LEFT JOIN `t_hidden_danger` `hd` ON `ps`.`hiddenDangerId` = `hd`.`id`
				LEFT JOIN t_equipment e ON e.deviceId = cd.deviceId
			WHERE `cd`.`channel` IN (
					SELECT `ps`.`channel`
					FROM `t_passageway` `ps`
					WHERE `ps`.`systemId` = `e`.`systemId`
				)
				AND `cd`.`deviceId` = e.deviceId
				AND cd.dealStatus = 0
				AND (`cd`.`value` &gt; `hd`.`HiddenMax`
					OR `cd`.`value` &lt; `hd`.`HiddenMin`)
				AND e.deviceId = #{deviceId}
			ORDER BY cd.dateTime DESC
			LIMIT #{count}
		  </select>
		<!-- 查询具体隐患报警    查看警告-->
		  <select id="selectDangerChannelDtoBySid" resultType="i9.defence.platform.dao.vo.HiddenDangerChannelDto">
		 	SELECT cd.*
			FROM `t_channel_data` `cd`
				LEFT JOIN `t_equipment_fault` `ef` ON `cd`.`value` = `ef`.`code`
			WHERE `cd`.`deviceId` = #{deviceId}
				AND `ef`.`type` = 0
				AND `cd`.`dealStatus` = 0
				AND cd.channel IN (
					SELECT channel
					FROM t_passageway
					WHERE systemId = (
						SELECT systemId
						FROM t_equipment
						WHERE `deviceId` = #{deviceId}
					)
				)
			ORDER BY cd.dateTime DESC
			LIMIT #{count}
		  </select>
		<!-- 查询全部 -->
		<select id="selectAllHiddenDanger" resultType="i9.defence.platform.dao.vo.HiddenDangerDto">
			select id,deviceId,equipmentPosition,eqCategoryName,projectName,hiddeCount,personLiableMan,warningCount from v_hiddenDanger_edit
			<if test="_parameter != null">
				<include refid="Query_HiddenDanger_By_Dto_Where_Clause" />
			</if>
		</select>
		<select id="selectHiddenDangerDtoByDeviceId" parameterType="string" resultType="i9.defence.platform.dao.vo.HiddenDangerDto">
			select * from v_hiddenDanger_edit where deviceId = #{deviceId}
		</select>
		<select id="selectDataAndManager" parameterType="int" resultType="i9.defence.platform.dao.vo.EquipmentProjectDto">
			SELECT
				e.equipmentDate,
				e.systemId,
				(
			SELECT  c.phone 
			FROM
				t_client c 
			WHERE
				c.id IN ( SELECT clientId  FROM t_project_client ps WHERE ps.projectId = e.projectId ) limit 1
				)  as clientPhone ,
				
				(
			SELECT
				 c.name
			FROM
				t_client c 
			WHERE
				c.id IN ( SELECT clientId  FROM t_project_client ps WHERE ps.projectId = e.projectId) limit 1
				)as clientName,
				(
			SELECT
				 m.phone
			FROM
				t_manager m 
			WHERE
				m.id IN ( SELECT managerId  FROM t_project_safe ps WHERE ps.projectId = e.projectId and ps.safe =1) limit 1
				)as safePhone  ,
					(
			SELECT
				 m.name
			FROM
				t_manager m 
			WHERE
				m.id IN ( SELECT managerId  FROM t_project_safe ps WHERE ps.projectId = e.projectId and ps.safe =1) limit 1
				)as safeName,e.deviceId,e.systemId,e.projectId,e.equipmentPosition,e.equipmentRemarks,e.equipmentName,ec.eqCategoryName as equipmentCategoryName,p.projectName as projectName,CONCAT(p.projectProvince,p.projectCity,p.projectCounty,p.projectAddress) as projectLocation
			FROM
				t_equipment e left join t_equipment_category ec on e.systemId = ec.eqCategoryId left join t_project p on e.projectId = p.id
			WHERE
				e.id = #{id}
		</select>
		
	<!-- ———————————— 隐患与报警———————————— -->
	
	<!-- 故障设备 -->
	<sql id="Query_Error_By_Dto_Where_Clause">
		<!--根据项目名称 模糊搜索  -->	
		<if test="example.projectId != null and example.projectId != ''">
			and projectId =#{example.projectId}
		</if>
	</sql>
	<select id="countErrorByExample"  resultType="java.lang.Integer">
	    select count(*) from (select e.*,(select count(*) from t_channel_data cd where deviceId = e.deviceId and type = 0 and dealStatus = 0) as error from t_equipment e) a where a.error > 0 
		<if test="_parameter != null">
			<include refid="Query_Error_By_Dto_Where_Clause" />
		</if>
    </select>
	<select id="selectErrorEquipment" resultMap="BaseResultMap">
		select * from (select e.*,(select count(*) from t_channel_data cd where deviceId = e.deviceId and type = 0 and dealStatus = 0) as error from t_equipment e) a where a.error > 0 
		<if test="_parameter != null">
			<include refid="Query_Error_By_Dto_Where_Clause" />
		</if>
		limit #{offset},#{limit}
	</select>
	<!-- <select id="selectMonthData" resultType="i9.defence.platform.dao.vo.MonthData">
		select count(*) as count,DATE_FORMAT(cd.dateTime,'%Y-%m') as month  from v_hiddendanger_channel_data cd left join t_equipment e on e.deviceId = cd.deviceId left join t_project p on p.id = e.projectId 
		where (cd.value &gt;= cd.WarningMax or  cd.value &lt;= cd.WarningMin)  
		<if test="example.projectId != null ">
	         and p.id = #{projectId}
        </if>
        <if test="example.endTime != null and example.endTime != ''">
	        and cd.dateTime &lt; endTime
        </if>
        <if test="example.startTime != null and example.startTime != ''">
	        cd.dateTime &gt; startTime 
        </if>
		GROUP BY DATE_FORMAT(cd.dateTime,'%Y-%m') 
	</select> -->
	
	<select id="selectWarningMonthData" parameterType="i9.defence.platform.dao.vo.MonthDataDto" resultType="i9.defence.platform.dao.vo.MonthData">
		SELECT COUNT(*) AS count, tab.mon AS month
		FROM (
			SELECT cd.deviceId, COUNT(*)
				, DATE_FORMAT(cd.dateTime, '%Y-%m') AS mon
			FROM t_channel_data cd
				LEFT JOIN `t_equipment_fault` `ef` ON `cd`.`value` = `ef`.`code` left join t_equipment e on e.deviceId = cd.deviceId
			WHERE `ef`.`type` = 0
				AND cd.deviceId IN (
					SELECT deviceId
					FROM t_equipment
				)
				AND `cd`.`channel` IN ( SELECT `t_passageway`.`channel` FROM `t_passageway` WHERE ( `t_passageway`.`systemId` = `e`.`systemId` ) ) 
				<if test="projectId != null">
			         and e.projectId = #{projectId}
		        </if>
		        <if test="projectId == null and projectProvince != null and projectProvince != ''">
			         <if test="projectCity == null || projectCity == ''">
			        	 and e.projectId in (select id from t_project where projectProvince = #{projectProvince})
		        	 </if>
			         <if test="projectCity != null and projectCity != ''">
			        	 and e.projectId in (select id from t_project where projectProvince = #{projectProvince} and projectCity = #{projectCity} )
		        	 </if>
		        </if>
		        <if test="endTime != null and endTime != ''">
			        and cd.dateTime &lt; #{endTime}
		        </if>
		        <if test="startTime != null and startTime != ''">
			        and cd.dateTime &gt; #{startTime} 
		        </if>
			GROUP BY DATE_FORMAT(cd.dateTime, '%Y-%m'), cd.deviceId
		) tab
		GROUP BY tab.mon
	</select>
	
	
	<!-- <select id="selectHiddenMonthData" resultType="i9.defence.platform.dao.vo.MonthData">
		select count(*) as count,DATE_FORMAT(cd.dateTime,'%Y-%m') as month  from v_hiddendanger_channel_data cd left join t_equipment e on e.deviceId = cd.deviceId left join t_project p on p.id = e.projectId 
		where ((cd.value &gt; cd.HiddenMax and cd.value &lt; cd.WarningMax)or(cd.value &lt; cd.HiddenMin and cd.value &gt; cd.WarningMin)) 
		<if test="projectIds != null  and  projectIds.size > 0 ">
	          and p.id in
	         <foreach collection="projectIds" item="projectId" open="(" separator=","  close=")">
				#{projectId}
			</foreach>
        </if>
        <if test="endTime != null and endTime != ''">
	        and cd.dateTime &lt; #{endTime}
        </if>
        <if test="startTime != null and startTime != ''">
	        and cd.dateTime &gt; #{startTime} 
        </if>
		GROUP BY DATE_FORMAT(cd.dateTime,'%Y-%m') 
	</select> -->
	<select id="selectHiddenMonthData" parameterType="i9.defence.platform.dao.vo.MonthDataDto"  resultType="i9.defence.platform.dao.vo.MonthData">
		SELECT COUNT(*) AS count, tab.mon AS MONTH
		FROM (
			SELECT cd.deviceId, COUNT(*)
				, DATE_FORMAT(cd.dateTime, '%Y-%m') AS mon
			FROM `t_channel_data` `cd`
				LEFT JOIN t_equipment e ON e.deviceId = cd.deviceId
				LEFT JOIN `t_passageway` `ps`
				ON `cd`.`systemId` = `ps`.`systemId`
					AND `cd`.`channel` = `ps`.`channel`
				LEFT JOIN `t_hidden_danger` `hd` ON `ps`.`hiddenDangerId` = `hd`.`id`
			WHERE `cd`.`channel` IN (
					SELECT `ps`.`channel`
					FROM `t_passageway` `ps`
					WHERE `ps`.`systemId` = `e`.`systemId`
				)
				AND (`cd`.`deviceId` = `e`.`deviceId`)
				AND (`cd`.`value` &gt; `hd`.`HiddenMax`
					OR `cd`.`value` &lt; `hd`.`HiddenMin`)
				<if test="projectId != null">
			         and e.projectId = #{projectId}
		        </if>
		        <if test="projectId == null and projectProvince != null and projectProvince != ''">
			         <if test="projectCity == null || projectCity == ''">
			        	 and e.projectId in (select id from t_project where projectProvince = #{projectProvince})
		        	 </if>
			         <if test="projectCity != null and projectCity != ''">
			        	 and e.projectId in (select id from t_project where projectProvince = #{projectProvince} and projectCity = #{projectCity} )
		        	 </if>
		        </if>
		        <if test="endTime != null and endTime != ''">
			        and cd.dateTime &lt; #{endTime}
		        </if>
		        <if test="startTime != null and startTime != ''">
			        and cd.dateTime &gt; #{startTime} 
		        </if>
			GROUP BY DATE_FORMAT(cd.dateTime, '%Y-%m'), cd.deviceId
		) tab
		GROUP BY tab.mon
	</select>
	<select id="selectEqChannelDataDto" parameterType="java.lang.Integer" resultType="i9.defence.platform.dao.vo.EqChannelDataDto">
		SELECT (select p.`name` from `t_passageway` `p` where p.channel = cd.channel and p.systemId = e.systemId) AS `channelName`, `cd`.`channel` AS `channelNum`,`cd`.`value` AS `channelValue`,cd.type as type
		FROM `t_channel_data` `cd`
			LEFT JOIN `t_equipment` `e` ON `e`.`deviceId` = `cd`.`deviceId`
			
		WHERE `e`.`id` = #{id} 
			AND cd.channel IN ( SELECT channel FROM  t_passageway where systemId = (select systemId from t_equipment where id = #{id} )) 
			AND `cd`.`dateTime` = (
				SELECT `t_channel_data`.`dateTime`
				FROM `t_channel_data`
				WHERE `t_channel_data`.`deviceId` = (
					SELECT `t_equipment`.`deviceId`
					FROM `t_equipment`
					WHERE `t_equipment`.`id` = #{id}
				)
				ORDER BY `t_channel_data`.`dateTime` DESC
				LIMIT 1
			)
		ORDER BY `cd`.`channel`
	</select>
	
	<sql id="Query_By_Dto_Where_Clause4">
	    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
	    	<if test="example.projectId != null">
	    		AND p.id = #{example.projectId}
	    	</if>
	    	<if test="example.projectId == null">
		    	<if test="example.projectProvince != null and example.projectProvince != ''">
		          AND p.projectProvince = #{example.projectProvince}
		        </if>
		        <if test="example.projectCity != null and example.projectCity != ''">
		          AND p.projectCity = #{example.projectCity}
		        </if>
	    	</if>
	    	<if test="example.projectManagerId != null">
	    		AND ps.managerId = #{example.projectManagerId}
	    	</if>
	    	<if test="example.distributorId != null">
	    		AND p.distributorId = #{example.distributorId}
	    	</if>
	    </trim>
    </sql>
	<select id="selectTotalEquipmentDto" parameterType="i9.defence.platform.dao.vo.MonthDataDto" resultType="int">
		select count(DISTINCT e.id) from  t_equipment e left join t_project p on p.id = e.projectId left join t_project_safe ps on p.id = ps.projectId 
		<if test="_parameter != null">
	      <include refid="Query_By_Dto_Where_Clause4" />
	    </if>
	 </select>
	 
	 <select id="selectTotalAlertEquipmentDto" parameterType="i9.defence.platform.dao.vo.MonthDataDto" resultType="int">
		select count(DISTINCT id) from  v_hiddendanger_edit 
		<trim prefix="WHERE"  prefixOverrides="AND|OR" >
			<if test="example.projectId != null">
	    		AND projectId = #{example.projectId}
	    	</if>
	    	<if test="example.projectId == null">
		    	<if test="example.projectProvince != null and example.projectProvince != ''">
		          AND projectProvince = #{example.projectProvince}
		        </if>
		        <if test="example.projectCity != null and example.projectCity != ''">
		          AND projectCity = #{example.projectCity}
		        </if>
	    	</if>
	    	<if test="example.projectManagerId != null">
	    		AND projectId in  (select projectId from t_project_safe where managerId = #{example.projectManagerId})
	    	</if>
	    	<if test="example.distributorId != null">
	    		AND distributorId = #{example.distributorId}
	    	</if>
	    	and warningCount > 0
    	</trim>
	 </select>
	 
	 <select id="selectOfflineEquipment" resultType="int">
	 	select count(DISTINCT e.id) from  t_equipment e left join t_project p on p.id = e.projectId left join t_project_safe ps on p.id = ps.projectId 
		where e.status = 0
		<if test="example.projectId != null">
    		AND p.id = #{example.projectId}
    	</if>
    	<if test="example.projectId == null">
	    	<if test="example.projectProvince != null and example.projectProvince != ''">
	          AND p.projectProvince = #{example.projectProvince}
	        </if>
	        <if test="example.projectCity != null and example.projectCity != ''">
	          AND p.projectCity = #{example.projectCity}
	        </if>
    	</if>
    	<if test="example.projectManagerId != null">
    		AND ps.managerId = #{example.projectManagerId}
    	</if>
    	<if test="example.distributorId != null">
    		AND p.distributorId = #{example.distributorId}
    	</if>
	 </select>
	 
	 <select id="selectHiddenEquipment" resultType="int">
	 	select count(DISTINCT id) from  v_hiddendanger_edit 
		<trim prefix="WHERE"  prefixOverrides="AND|OR" >
			<if test="example.projectId != null">
	    		AND projectId = #{example.projectId}
	    	</if>
	    	<if test="example.projectId == null">
		    	<if test="example.projectProvince != null and example.projectProvince != ''">
		          AND projectProvince = #{example.projectProvince}
		        </if>
		        <if test="example.projectCity != null and example.projectCity != ''">
		          AND projectCity = #{example.projectCity}
		        </if>
	    	</if>
	    	<if test="example.projectManagerId != null">
	    		AND projectId in  (select projectId from t_project_safe where managerId = #{example.projectManagerId})
	    	</if>
	    	<if test="example.distributorId != null">
	    		AND distributorId = #{example.distributorId}
	    	</if>
	    	and hiddeCount>0 and warningCount = 0
    	</trim>
	 </select>
	 
	 <update id="updateEquipmentStatusByDeviceId">
	 	update t_equipment set status = #{status} where deviceId = #{deviceId}
	 </update>
	 <select id="findEquipmentDeviceId" parameterType="string" resultType="i9.defence.platform.model.Equipment">
	    select  * from t_equipment where deviceId = #{deviceId,jdbcType=VARCHAR}
	  </select>
	 <update id="updateEquipmentDataStatus">
	 	update t_equipment set dataStatus = #{datastatus} where deviceId = #{deviceId}
	 </update>
	 
</mapper>