<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="i9.defence.platform.dao.mapper.EquipmentMapper">
  <resultMap id="BaseResultMap" type="i9.defence.platform.model.Equipment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="equipmentName" jdbcType="VARCHAR" property="equipmentName" />
    <result column="equipmentNum" jdbcType="INTEGER" property="equipmentNum" />
    <result column="equipmentIdentifier" jdbcType="VARCHAR" property="equipmentIdentifier" />
    <result column="equipmentPosition" jdbcType="VARCHAR" property="equipmentPosition" />
    <result column="equipmentDate" jdbcType="TIMESTAMP" property="equipmentDate" />
    <result column="equipmentRemarks" jdbcType="VARCHAR" property="equipmentRemarks" />
    <result column="equipmentCategoryId" jdbcType="INTEGER" property="equipmentCategoryId" />
    <result column="projectId" jdbcType="INTEGER" property="projectId" />
    <result column="systemId" jdbcType="VARCHAR" property="systemId" />
    <result column="unit" jdbcType="INTEGER" property="unit" />
    <result column="loopl" jdbcType="INTEGER" property="loopl" />
    <result column="delStatus" jdbcType="INTEGER" property="delStatus" />
    <association property="equipmentCategory" column="equipmentCategoryId" select="i9.defence.platform.dao.mapper.EquipmentCategoryMapper.selectByPrimaryKey"></association>
    <association property="project" column="projectId" select="i9.defence.platform.dao.mapper.ProjectMapper.selectByPrimaryKey"></association>
  	<collection column="id" ofType="i9.defence.platform.model.Passageway" property="passageways" select="i9.defence.platform.dao.mapper.PassagewayMapper.selectByEquipmentId"></collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
    <sql id="Query_By_Dto_Where_Clause">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
        <if test="example.equipmentName != null and example.equipmentName != ''">
         OR( equipmentName LIKE CONCAT('%',CONCAT('${example.equipmentName}','%'))
        </if>
        <if test="example.equipmentIdentifier != null and example.equipmentIdentifier != ''">
          OR equipmentIdentifier LIKE CONCAT('%',CONCAT('${example.equipmentIdentifier}','%'))
        </if>
        <if test="example.equipmentPosition != null and example.equipmentPosition != ''">
          OR equipmentPosition LIKE CONCAT('%',CONCAT('${example.equipmentPosition}','%')))
        </if>
    </trim>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, equipmentName, equipmentNum, equipmentIdentifier, equipmentPosition, equipmentDate, 
    equipmentRemarks, equipmentCategoryId,projectId,systemId,unit,loopl,delStatus
  </sql>
  <select id="selectByExample" parameterType="i9.defence.platform.model.EquipmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_equipment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.List" >
    delete from t_equipment
    where id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
  </delete>
  <delete id="deleteByExample" parameterType="i9.defence.platform.model.EquipmentExample">
    delete from t_equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="i9.defence.platform.model.Equipment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_equipment (equipmentName, equipmentNum, equipmentIdentifier, 
      equipmentPosition, equipmentDate, equipmentRemarks, 
      equipmentCategoryId,projectId,systemId,unit,loopl)
    values (#{equipmentName,jdbcType=VARCHAR}, #{equipmentNum,jdbcType=INTEGER}, #{equipmentIdentifier,jdbcType=VARCHAR}, 
      #{equipmentPosition,jdbcType=VARCHAR}, #{equipmentDate,jdbcType=TIMESTAMP}, #{equipmentRemarks,jdbcType=VARCHAR}, 
      #{equipmentCategoryId,jdbcType=INTEGER},#{projectId,jdbcType=INTEGER},#{systemId,jdbcType=VARCHAR},
      #{unit,jdbcType=INTEGER},#{loopl,jdbcType=INTEGER},#{delStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="i9.defence.platform.model.Equipment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_equipment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="equipmentName != null">
        equipmentName,
      </if>
      <if test="equipmentNum != null">
        equipmentNum,
      </if>
      <if test="equipmentIdentifier != null">
        equipmentIdentifier,
      </if>
      <if test="equipmentPosition != null">
        equipmentPosition,
      </if>
      <if test="equipmentDate != null">
        equipmentDate,
      </if>
      <if test="equipmentRemarks != null">
        equipmentRemarks,
      </if>
      <if test="equipmentCategoryId != null">
        equipmentCategoryId,
      </if>
      <if test="projectId != null">
        projectId,
      </if>
       <if test="systemId != null">
        systemId,
      </if>
       <if test="unit != null">
        unit,
      </if>
       <if test="loopl != null"> 
        loopl, 
      </if>
       <if test="delStatus != null"> 
        delStatus, 
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="equipmentName != null">
        #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentNum != null">
        #{equipmentNum,jdbcType=INTEGER},
      </if>
      <if test="equipmentIdentifier != null">
        #{equipmentIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="equipmentPosition != null">
        #{equipmentPosition,jdbcType=VARCHAR},
      </if>
      <if test="equipmentDate != null">
        #{equipmentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="equipmentRemarks != null">
        #{equipmentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="equipmentCategoryId != null">
        #{equipmentCategoryId,jdbcType=INTEGER},
      </if>
       <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
       <if test="systemId != null">
        #{systemId,jdbcType=VARCHAR},
      </if>
       <if test="unit != null">
        #{unit,jdbcType=INTEGER},
      </if> 
      <if test="loopl != null">
        #{loopl,jdbcType=INTEGER},
      </if>
      <if test="delStatus != null">
        #{delStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample"  resultType="java.lang.Integer">
    select count(*) from t_equipment
    <if test="_parameter != null">
      <include refid="Query_By_Dto_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_equipment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentName != null">
        equipmentName = #{record.equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentNum != null">
        equipmentNum = #{record.equipmentNum,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentIdentifier != null">
        equipmentIdentifier = #{record.equipmentIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentPosition != null">
        equipmentPosition = #{record.equipmentPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentDate != null">
        equipmentDate = #{record.equipmentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.equipmentRemarks != null">
        equipmentRemarks = #{record.equipmentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentCategoryId != null">
        equipmentCategoryId = #{record.equipmentCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentCategoryId != null">
        equipmentCategoryId = #{record.equipmentCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        projectId = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.systemId != null">
        systemId = #{record.systemId,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=INTEGER},
      </if>
      <if test="record.loopl != null">
        loopl = #{record.loopl,jdbcType=INTEGER},
      </if>
      <if test="record.delStatus != null">
        loopl = #{record.delStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_equipment
    set id = #{record.id,jdbcType=INTEGER},
      equipmentName = #{record.equipmentName,jdbcType=VARCHAR},
      equipmentNum = #{record.equipmentNum,jdbcType=INTEGER},
      equipmentIdentifier = #{record.equipmentIdentifier,jdbcType=VARCHAR},
      equipmentPosition = #{record.equipmentPosition,jdbcType=VARCHAR},
      equipmentDate = #{record.equipmentDate,jdbcType=TIMESTAMP},
      equipmentRemarks = #{record.equipmentRemarks,jdbcType=VARCHAR},
      equipmentCategoryId = #{record.equipmentCategoryId,jdbcType=INTEGER},
      projectId = #{record.projectId,jdbcType=INTEGER},
      systemId = #{record.systemId,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=INTEGER},
      loopl = #{record.loopl,jdbcType=INTEGER},
      delStatus = #{record.delStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="i9.defence.platform.model.Equipment">
    update t_equipment
    <set>
      <if test="equipmentName != null">
        equipmentName = #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentNum != null">
        equipmentNum = #{equipmentNum,jdbcType=INTEGER},
      </if>
      <if test="equipmentIdentifier != null">
        equipmentIdentifier = #{equipmentIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="equipmentPosition != null">
        equipmentPosition = #{equipmentPosition,jdbcType=VARCHAR},
      </if>
      <if test="equipmentDate != null">
        equipmentDate = #{equipmentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="equipmentRemarks != null">
        equipmentRemarks = #{equipmentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="equipmentCategoryId != null">
        equipmentCategoryId = #{equipmentCategoryId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
       <if test="systemId != null">
        systemId = #{systemId,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="loopl != null">
        loopl = #{loopl,jdbcType=INTEGER},
      </if>
       <if test="delStatus != null">
        delStatus = #{delStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="i9.defence.platform.model.Equipment">
    update t_equipment
    set equipmentName = #{equipmentName,jdbcType=VARCHAR},
      equipmentNum = #{equipmentNum,jdbcType=INTEGER},
      equipmentIdentifier = #{equipmentIdentifier,jdbcType=VARCHAR},
      equipmentPosition = #{equipmentPosition,jdbcType=VARCHAR},
      equipmentDate = #{equipmentDate,jdbcType=TIMESTAMP},
      equipmentRemarks = #{equipmentRemarks,jdbcType=VARCHAR},
      equipmentCategoryId = #{equipmentCategoryId,jdbcType=INTEGER},
      projectId = #{projectId,jdbcType=INTEGER},
      systemId = #{systemId,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=INTEGER},
      loopl = #{loopl,jdbcType=INTEGER},
      delStatus = #{delStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByLimitPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from t_equipment
        <if test="_parameter != null" >
          <include refid="Query_By_Dto_Where_Clause" />
        </if>
        <if test="example.orderByClause != null" >
          order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
   </select>
   <select id="selectByLimitPage2" resultMap="BaseResultMap">
        select e.id as id, e.equipmentName as equipmentName, e.equipmentNum as equipmentNum, e.equipmentIdentifier as equipmentIdentifier, e.equipmentPosition as equipmentPosition, e.equipmentDate as equipmentDate, 
    e.equipmentRemarks as equipmentRemarks, e.equipmentCategoryId as equipmentCategoryId,e.projectId as projectId,e.systemId as systemId,e.unit as unit,e.loopl as loopl,e.delStatus as delStatus from t_equipment e left join t_project p on e.projectId = p.id 
        <if test="_parameter != null" >
          <include refid="Query_By_Dto_Where_Clause2" />
        </if>
        <if test="example.orderByClause != null" >
          order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
   </select>
   <sql id="Query_By_Dto_Where_Clause2">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
        <if test="example.equipmentName != null and example.equipmentName != ''">
         OR( equipmentName LIKE CONCAT('%',CONCAT('${example.equipmentName}','%'))
        </if>
        <if test="example.equipmentIdentifier != null and example.equipmentIdentifier != ''">
          OR equipmentIdentifier LIKE CONCAT('%',CONCAT('${example.equipmentIdentifier}','%'))
        </if>
        <if test="example.equipmentPosition != null and example.equipmentPosition != ''">
          OR equipmentPosition LIKE CONCAT('%',CONCAT('${example.equipmentPosition}','%'))
        </if>
        <if test="example.equipmentPosition != null and example.equipmentPosition != ''">
          OR equipmentPosition LIKE CONCAT('%',CONCAT('${example.equipmentPosition}','%')))
        </if>
        and p.distributorId = #{distributorId,jdbcType=INTEGER}
    </trim>
  </sql>
   <select id="selectPassagewayByEid" resultType="i9.defence.platform.model.Passageway">
   select channel,name,systemId,hiddenDangerId
    from  t_passageway	
     where systemId=#{systemId}  
   </select>
   
   <insert id="insertPassageWay" parameterType="i9.defence.platform.model.Passageway">
   	insert into t_passageway(channel,name,systemId,hiddenDangerId) values(#{channel},#{name},#{systemId},#{hiddenDangerId})
   </insert>
   
   <update id="updateEquipments" parameterType="java.util.List">
   	update  t_equipment
	<trim prefix="set" suffixOverrides=",">
		<trim prefix="delStatus =case" suffix="end,">
			<foreach collection="applies" item="item">
				when id=#{item.id} then #{item.delStatus}
			</foreach>
		</trim>
	</trim>	
	<where>
		<foreach collection="applies" separator="or" item="item" >
			id=#{item.id}
		</foreach>
	</where>
   </update>

	<!-- ———————————— 隐患与报警———————————— -->

		<select id="countHiddenDangerByExample" resultType="java.lang.Integer">
			select count(*) from v_hiddenDanger_edit
			<if test="_parameter != null">
				<include refid="Query_HiddenDanger_By_Dto_Where_Clause" />
			</if>
		</select>
		<sql id="Query_HiddenDanger_By_Dto_Where_Clause">
			<trim prefix="WHERE" prefixOverrides="AND|OR">
				<!--根据项目名称 模糊搜索  -->	
				<if test="example.projectName != null and example.projectName != ''">
					and projectName ='${example.projectName}'
				</if>
				<!--根据设备类型 模糊搜索  -->	
				<if test="example.eqCategoryName != null and example.eqCategoryName != ''">
					and eqCategoryName ='${example.eqCategoryName}'
				</if>
				<!--根据项目所在省 模糊搜索  -->	
				<if test="example.projectProvince != null and example.projectProvince != ''">
					and projectProvince ='${example.projectProvince}'
				</if>
				<!--根据项目所在市 模糊搜索  -->	
				<if test="example.projectCity != null and example.projectCity != ''">
					and projectCity ='${example.projectCity}'
				</if>
				<!--根据项目所在县/区 模糊搜索  -->	
				<if test="example.projectCounty != null and example.projectCounty != ''">
					and projectCounty ='${example.projectCounty}'
				</if>
				<!--隐患不为0  -->	
				<if test="example.hidden != null and example.hidden != ''">
					and hiddeCount != 0
				</if>
				<!--报警不为0  -->	
				<if test="example.danger != null and example.danger != ''">
					and warningCount != 0 
				</if>
				<!--项目负责人  -->	
				<if test="example.prijrctManagerId != null and example.prijrctManagerId != ''">
					and projectId in (select projectId from t_project_safe where managerId = '${example.prijrctManagerId}')
				</if>
				<!--经销商  -->	
				<if test="example.distributorId != null and example.distributorId != ''">
					and distributorId = ='${example.distributorId}'
				</if>
				<!-- <if test="example.startDate != null and example.startDate != ''">
					and example.startDate &lt; equipmentDate
				</if>
				<if test="example.endDate != null and example.endDate != ''">
					and example.endDate &gt; equipmentDate
				</if> -->
			</trim>
		</sql>
		<!-- 分页查询 -->
		<select id="selectHiddenDangerByLimitPage" resultType="i9.defence.platform.dao.vo.HiddenDangerDto">
			select id,systemId,equipmentName,equipmentPosition,eqCategoryName,projectName,hiddeCount,personLiableMan,warningCount from v_hiddenDanger_edit
			<if test="_parameter != null">
				<include refid="Query_HiddenDanger_By_Dto_Where_Clause" />
			</if>
			<if test="example.orderByClause != null">
				order by ${example.orderByClause}
			</if>
			limit #{offset},#{limit}
		</select>
		<!-- 查询具体隐患报警 -->
		 <select id="selectHiddenDangerChannelDtoBySid" parameterType="string" resultType="i9.defence.platform.dao.vo.HiddenDangerChannelDto">
			  select id,systemId,name,value,dateTime,channel
			   from  v_hiddendanger_channel_data	
			    where systemId=#{systemId,jdbcType=VARCHAR}
		  </select>
		<!-- 查询全部 -->
		<select id="selectAllHiddenDanger" resultType="i9.defence.platform.dao.vo.HiddenDangerDto">
			select id,systemId,equipmentPosition,eqCategoryName,projectName,hiddeCount,personLiableMan,warningCount from v_hiddenDanger_edit
			<if test="_parameter != null">
				<include refid="Query_HiddenDanger_By_Dto_Where_Clause" />
			</if>
		</select>
	<!-- ———————————— 隐患与报警———————————— -->
</mapper>