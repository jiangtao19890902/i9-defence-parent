<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="i9.defence.platform.dao.mapper.HiddenDangerInfoMapper">
  <resultMap id="BaseResultMap" type="i9.defence.platform.model.HiddenDangerInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="hid" jdbcType="INTEGER" property="hid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="keyName" jdbcType="VARCHAR" property="keyName" />
    <result column="MaxOrMin" jdbcType="VARCHAR" property="maxOrMin" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <association property="hiddenDanger" column="hid" select="i9.defence.platform.dao.mapper.HiddenDangerMapper.selectByPrimaryKey"/> 
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, hid, name, value
  </sql>
   <sql id="Query_By_Dto_Where_Clause">
	  <trim prefix="WHERE"  prefixOverrides="AND|OR" >
		  	<if test="example.name != null and example.name != ''">
	            OR (name LIKE CONCAT(CONCAT('%','${example.name}'),'%' )
	        </if>
	        <if test="example.value != null and example.value != ''">
	            OR value LIKE CONCAT(CONCAT('%','${example.value}'),'%' )
	        </if>
	  </trim>
  </sql>
  <select id="selectByExample" parameterType="i9.defence.platform.model.HiddenDangerInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_hidden_dangerinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_hidden_dangerinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_hidden_dangerinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="i9.defence.platform.model.HiddenDangerInfoExample">
    delete from t_hidden_dangerinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="i9.defence.platform.model.HiddenDangerInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_hidden_dangerinfo (type, hid, name, 
      keyName, MaxOrMin, value
      )
    values (#{type,jdbcType=INTEGER}, #{hid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{keyName,jdbcType=VARCHAR}, #{maxOrMin,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="i9.defence.platform.model.HiddenDangerInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_hidden_dangerinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        type,
      </if>
      <if test="hid != null">
        hid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="keyName != null">
        keyName,
      </if>
      <if test="maxOrMin != null">
        MaxOrMin,
      </if>
      <if test="value != null">
        value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="hid != null">
        #{hid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="keyName != null">
        #{keyName,jdbcType=VARCHAR},
      </if>
      <if test="maxOrMin != null">
        #{maxOrMin,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="i9.defence.platform.model.HiddenDangerInfoExample" resultType="java.lang.Integer">
    select count(*) from t_hidden_dangerinfo
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_hidden_dangerinfo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.hid != null">
        hid = #{record.hid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.keyName != null">
        keyName = #{record.keyName,jdbcType=VARCHAR},
      </if>
      <if test="record.maxOrMin != null">
        MaxOrMin = #{record.maxOrMin,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_hidden_dangerinfo
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      hid = #{record.hid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      keyName = #{record.keyName,jdbcType=VARCHAR},
      MaxOrMin = #{record.maxOrMin,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="i9.defence.platform.model.HiddenDangerInfo">
    update t_hidden_dangerinfo
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="hid != null">
        hid = #{hid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="keyName != null">
        keyName = #{keyName,jdbcType=VARCHAR},
      </if>
      <if test="maxOrMin != null">
        MaxOrMin = #{maxOrMin,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="i9.defence.platform.model.HiddenDangerInfo">
    update t_hidden_dangerinfo
    set type = #{type,jdbcType=INTEGER},
      hid = #{hid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      keyName = #{keyName,jdbcType=VARCHAR},
      MaxOrMin = #{maxOrMin,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
      <select id="selectByLimitPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from t_hidden_dangerinfo 
        <if test="_parameter != null" >
          <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null" >
          order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
    </select>
</mapper>