<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="i9.defence.platform.dao.mapper.ManagerApplyMapper" >
  <resultMap id="BaseResultMap" type="i9.defence.platform.model.ManagerApply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="securitier" property="securitier" jdbcType="TINYINT" />
    <result column="agreeFlag" property="agreeFlag" jdbcType="TINYINT" />
    <result column="refuseContent" property="refuseContent" jdbcType="VARCHAR" />
    <result column="projectId" property="projectId" jdbcType="INTEGER" />
    <result column="operaterId" jdbcType="INTEGER" property="operaterId" />
    <result column="roleName" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
     id, username, password, email, phone, createTime, name, type, area, address, securitier, 
    agreeFlag, refuseContent, projectId, operaterId, roleName
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="i9.defence.platform.model.ManagerApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_manager_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_manager_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_manager_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="i9.defence.platform.model.ManagerApplyExample" >
    delete from t_manager_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="i9.defence.platform.model.ManagerApply" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_manager_apply (username, password, email, 
      phone, createTime, name, 
      type, area, address, 
      securitier, agreeFlag, refuseContent, 
      projectId, operaterId, roleName
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{area,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{securitier,jdbcType=TINYINT}, #{agreeFlag,jdbcType=TINYINT}, #{refuseContent,jdbcType=VARCHAR}, 
      #{projectId,jdbcType=INTEGER}, #{operaterId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="i9.defence.platform.model.ManagerApply" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_manager_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null and username != ''" >
        username,
      </if>
      <if test="password != null and password != ''" >
        password,
      </if>
      <if test="email != null and email != ''" >
        email,
      </if>
      <if test="phone != null and phone != ''" >
        phone,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="name != null and name != ''" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="area != null and area != ''" >
        area,
      </if>
      <if test="address != null and address != ''" >
        address,
      </if>
      <if test="securitier != null" >
        securitier,
      </if>
      <if test="agreeFlag != null" >
        agreeFlag,
      </if>
      <if test="refuseContent != null and refuseContent != ''" >
        refuseContent,
      </if>
      <if test="projectId != null" >
        projectId,
      </if>
       <if test="operaterId != null">
        operaterId,
      </if>
      <if test="roleName != null and roleName != ''">
        roleName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null and username != ''" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null and phone != ''" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null and name != ''" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="area != null and area != ''" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address != ''" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="securitier != null" >
        #{securitier,jdbcType=TINYINT},
      </if>
      <if test="agreeFlag != null" >
        #{agreeFlag,jdbcType=TINYINT},
      </if>
      <if test="refuseContent != null and refuseContent != ''" >
        #{refuseContent,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
       <if test="operaterId != null">
        #{operaterId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null and roleName != ''">
        #{roleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="i9.defence.platform.model.ManagerApplyExample" resultType="java.lang.Integer" >
    select count(*) from t_manager_apply
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_manager_apply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null and record.username != ''" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null and record.password != ''" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null and record.email != ''" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null and record.phone != ''" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null and record.name != ''" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.area != null and record.area != ''" >
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null and record.address != ''" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.securitier != null" >
        securitier = #{record.securitier,jdbcType=TINYINT},
      </if>
      <if test="record.agreeFlag != null" >
        agreeFlag = #{record.agreeFlag,jdbcType=TINYINT},
      </if>
      <if test="record.refuseContent != null and record.refuseContent != ''" >
        refuseContent = #{record.refuseContent,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null" >
        projectId = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.operaterId != null">
        operaterId = #{record.operaterId,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null and record.roleName != ''">
        roleName = #{record.roleName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_manager_apply
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      area = #{record.area,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      securitier = #{record.securitier,jdbcType=TINYINT},
      agreeFlag = #{record.agreeFlag,jdbcType=TINYINT},
      refuseContent = #{record.refuseContent,jdbcType=VARCHAR},
      projectId = #{record.projectId,jdbcType=INTEGER},
      operaterId = #{record.operaterId,jdbcType=INTEGER},
      roleName = #{record.roleName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="i9.defence.platform.model.ManagerApply" >
    update t_manager_apply
    <set >
      <if test="username != null and username != ''" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null and phone != ''" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null and name != ''" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="area != null and area != ''" >
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address != ''" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="securitier != null" >
        securitier = #{securitier,jdbcType=TINYINT},
      </if>
      <if test="agreeFlag != null" >
        agreeFlag = #{agreeFlag,jdbcType=TINYINT},
      </if>
      <if test="refuseContent != null and refuseContent != ''" >
        refuseContent = #{refuseContent,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="operaterId != null">
        operaterId = #{operaterId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null and roleName != ''">
        roleName = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="i9.defence.platform.model.ManagerApply" >
    update t_manager_apply
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      area = #{area,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      securitier = #{securitier,jdbcType=TINYINT},
      agreeFlag = #{agreeFlag,jdbcType=TINYINT},
      refuseContent = #{refuseContent,jdbcType=VARCHAR},
      projectId = #{projectId,jdbcType=INTEGER},
      operaterId = #{operaterId,jdbcType=INTEGER},
      roleName = #{roleName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByLimitPage" resultMap="BaseResultMap">
      select <include refid="Base_Column_List" /> from t_manager_apply 
      <if test="_parameter != null" >
        <include refid="Update_By_Example_Where_Clause" />
      </if>
      <if test="example.orderByClause != null" >
        order by ${example.orderByClause}
      </if>
      limit #{offset},#{limit}
  </select>
</mapper>