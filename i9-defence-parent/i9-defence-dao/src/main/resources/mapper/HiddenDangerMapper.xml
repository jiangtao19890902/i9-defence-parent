<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="i9.defence.platform.dao.mapper.HiddenDangerMapper">
  <resultMap id="BaseResultMap" type="i9.defence.platform.model.HiddenDanger">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="HiddenMax" jdbcType="DOUBLE" property="hiddenMax" />
    <result column="HiddenMin" jdbcType="DOUBLE" property="hiddenMin" />
    <result column="WarningMax" jdbcType="DOUBLE" property="warningMax" />
    <result column="WarningMin" jdbcType="DOUBLE" property="warningMin" />
    <result column="EquipCategoryId" jdbcType="INTEGER" property="equipCategoryId" />
    <association property="equipmentCategory" column="equipCategoryId" select="i9.defence.platform.dao.mapper.EquipmentCategoryMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, HiddenMax, HiddenMin, WarningMax, WarningMin, EquipCategoryId
  </sql>
  <select id="selectByExample" parameterType="i9.defence.platform.model.HiddenDangerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_hidden_danger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_hidden_danger
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.List">
    delete from t_hidden_danger
    where id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">
    	#{item}
    </foreach>
  </delete>
  <delete id="deleteByExample" parameterType="i9.defence.platform.model.HiddenDangerExample">
    delete from t_hidden_danger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="i9.defence.platform.model.HiddenDanger">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_hidden_danger (name, HiddenMax, HiddenMin, 
      WarningMax, WarningMin, EquipCategoryId
      )
    values (#{name,jdbcType=VARCHAR}, #{hiddenMax,jdbcType=DOUBLE}, #{hiddenMin,jdbcType=DOUBLE}, 
      #{warningMax,jdbcType=DOUBLE}, #{warningMin,jdbcType=DOUBLE}, #{equipCategoryId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="i9.defence.platform.model.HiddenDanger">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_hidden_danger
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="hiddenMax != null">
        HiddenMax,
      </if>
      <if test="hiddenMin != null">
        HiddenMin,
      </if>
      <if test="warningMax != null">
        WarningMax,
      </if>
      <if test="warningMin != null">
        WarningMin,
      </if>
      <if test="equipCategoryId != null">
        EquipCategoryId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="hiddenMax != null">
        #{hiddenMax,jdbcType=DOUBLE},
      </if>
      <if test="hiddenMin != null">
        #{hiddenMin,jdbcType=DOUBLE},
      </if>
      <if test="warningMax != null">
        #{warningMax,jdbcType=DOUBLE},
      </if>
      <if test="warningMin != null">
        #{warningMin,jdbcType=DOUBLE},
      </if>
      <if test="equipCategoryId != null">
        #{equipCategoryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="i9.defence.platform.model.HiddenDangerExample" resultType="java.lang.Long">
    select count(*) from t_hidden_danger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_hidden_danger
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.hiddenMax != null">
        HiddenMax = #{record.hiddenMax,jdbcType=DOUBLE},
      </if>
      <if test="record.hiddenMin != null">
        HiddenMin = #{record.hiddenMin,jdbcType=DOUBLE},
      </if>
      <if test="record.warningMax != null">
        WarningMax = #{record.warningMax,jdbcType=DOUBLE},
      </if>
      <if test="record.warningMin != null">
        WarningMin = #{record.warningMin,jdbcType=DOUBLE},
      </if>
      <if test="record.equipCategoryId != null">
        EquipCategoryId = #{record.equipCategoryId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_hidden_danger
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      HiddenMax = #{record.hiddenMax,jdbcType=DOUBLE},
      HiddenMin = #{record.hiddenMin,jdbcType=DOUBLE},
      WarningMax = #{record.warningMax,jdbcType=DOUBLE},
      WarningMin = #{record.warningMin,jdbcType=DOUBLE},
      EquipCategoryId = #{record.equipCategoryId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="i9.defence.platform.model.HiddenDanger">
    update t_hidden_danger
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="hiddenMax != null">
        HiddenMax = #{hiddenMax,jdbcType=DOUBLE},
      </if>
      <if test="hiddenMin != null">
        HiddenMin = #{hiddenMin,jdbcType=DOUBLE},
      </if>
      <if test="warningMax != null">
        WarningMax = #{warningMax,jdbcType=DOUBLE},
      </if>
      <if test="warningMin != null">
        WarningMin = #{warningMin,jdbcType=DOUBLE},
      </if>
      <if test="equipCategoryId != null">
        EquipCategoryId = #{equipCategoryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="i9.defence.platform.model.HiddenDanger">
    update t_hidden_danger
    set name = #{name,jdbcType=VARCHAR},
      HiddenMax = #{hiddenMax,jdbcType=DOUBLE},
      HiddenMin = #{hiddenMin,jdbcType=DOUBLE},
      WarningMax = #{warningMax,jdbcType=DOUBLE},
      WarningMin = #{warningMin,jdbcType=DOUBLE},
      EquipCategoryId = #{equipCategoryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    
    <select id="selectByLimitPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from  t_hidden_danger
        <if test="_parameter != null" >
          <include refid="Update_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null" >
          order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
   </select>
   <select id="selectErrorEquipmentIds" resultType="string">
   	select deviceId from v_hiddendanger_edit where hiddeCount >0 or warningCount >0 or errorCount >0
   </select>
</mapper>