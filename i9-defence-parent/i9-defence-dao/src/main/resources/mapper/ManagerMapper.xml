<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="i9.defence.platform.dao.mapper.ManagerMapper" >
  <resultMap id="BaseResultMap" type="i9.defence.platform.model.Manager" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="securitier" jdbcType="TINYINT" property="securitier" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="projectId" jdbcType="INTEGER" property="projectId" />
    <association property="role" column="id" javaType="i9.defence.platform.model.Role" select="selectRole"></association>
  </resultMap>
  <resultMap id="AgencyResultMap" extends="BaseResultMap" type="i9.defence.platform.model.Manager" >
    <collection property="agencyList" column="id" ofType="i9.defence.platform.model.Manager" select="selectAgency"></collection>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Query_By_Dto_Where_Clause">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
        <if test="example.username != null and example.username != ''">
            OR (username LIKE CONCAT(CONCAT('%','${example.username}'),'%' )
        </if>
        <if test="example.name != null and example.name != ''">
            OR name LIKE CONCAT(CONCAT('%','${example.name}'),'%' )
        </if>
        <if test="example.phone != null and example.phone != ''">
            OR phone LIKE CONCAT(CONCAT('%','${example.phone}'),'%' )
        </if>
        <if test="example.area != null and example.area != ''">
            OR area LIKE CONCAT(CONCAT('%','${example.area}'),'%' )
        </if>
        <if test="example.roleName != null and example.roleName != ''">
            OR id in(select managerId from t_manager_role mr left join t_role r on mr.roleId = r.id where r.name=#{example.roleName})
        </if>
        <if test="example.email != null and example.email != ''">
            OR email LIKE CONCAT(CONCAT('%','${example.email}'),'%' ))
        </if>
        <if test="example.types != null">
            AND type in
            <foreach collection="example.types" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </trim>
  </sql>
  <sql id="Base_Column_List" >
    id, username, password, email, phone, createTime, name, type, area, address, securitier, 
    status, projectId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="i9.defence.platform.model.ManagerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_manager
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_manager
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.List" >
    delete from t_manager
    where id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
  </delete>
  <delete id="deleteByExample" parameterType="i9.defence.platform.model.ManagerExample" >
    delete from t_manager
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="i9.defence.platform.model.Manager" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_manager (username, password, email, 
      phone, createTime, name, 
      type, area, address, 
      securitier, status, projectId
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{area,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{securitier,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{projectId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="i9.defence.platform.model.Manager" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_manager
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="name != null and name != ''">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="area != null and area != ''">
        area,
      </if>
      <if test="address != null and address != ''">
        address,
      </if>
      <if test="securitier != null">
        securitier,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="projectId != null">
        projectId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null and name != ''">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="securitier != null">
        #{securitier,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="addBatchManagers" useGeneratedKeys="true"
    keyProperty="id">
    insert into t_manager(username, password, email, 
      phone, createTime, name, 
      type, area, address, 
      securitier, status, projectId
      ) values 
      <foreach collection="list" item="item" separator=",">
      (#{item.username,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, 
      #{item.phone,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.name,jdbcType=VARCHAR}, 
      #{item.type,jdbcType=TINYINT}, #{item.area,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, 
      #{item.securitier,jdbcType=TINYINT}, #{item.status,jdbcType=TINYINT}, #{item.projectId,jdbcType=INTEGER}
      )
      </foreach>
  </insert>
  <select id="countByExample" parameterType="i9.defence.platform.model.ManagerExample" resultType="java.lang.Integer" >
    select count(*) from t_manager
    <if test="_parameter != null" >
      <include refid="Query_By_Dto_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_manager
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
       <if test="record.name != null and record.name != ''">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.area != null and record.area != ''">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null and record.address != ''">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.securitier != null">
        securitier = #{record.securitier,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.projectId != null">
        projectId = #{record.projectId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_manager
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      area = #{record.area,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      securitier = #{record.securitier,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      projectId = #{record.projectId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="i9.defence.platform.model.Manager" >
    update t_manager
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null and name != ''">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="area != null and area != ''">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address != ''">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="securitier != null">
        securitier = #{securitier,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="projectId != null">
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="i9.defence.platform.model.Manager" >
    update t_manager
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      area = #{area,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      securitier = #{securitier,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      projectId = #{projectId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByLimitPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from t_manager 
        <if test="_parameter != null" >
          <include refid="Query_By_Dto_Where_Clause" />
        </if>
        <if test="example.orderByClause != null" >
          order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
   </select>
    
    <!--  获取全部的管理员之新建项目时选择责任人、经销商、安全责任人 -->
  <select id="selectConditionMan" resultType="i9.defence.platform.dao.vo.ManagerSelectDto">
        select id,username from t_manager 
        <if test="_parameter != null" >
          <include refid="Query_By_Dto_Where_Clause" />
        </if>
  </select>
   <!-- 用户角色 -->
   <delete id="delManagerRole" parameterType="int">
    delete from t_manager_role where managerId = #{managerId};
   </delete> 
   <insert id="addManagerRole">
    insert into t_manager_role(managerId,roleId) values(#{managerId},#{roleId});
   </insert>
   <select id="selectRole" parameterType="int" resultType="i9.defence.platform.model.Role">
    select r.* from t_role r left join t_manager_role m on r.id = m.roleId where m.managerId = #{id}
   </select>
   <insert id="addBatchManagerRole" parameterType="java.util.List">
     insert into t_manager_role(managerId,roleId) values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},(select id from t_role where name = #{item.role.name}) )
        </foreach>
   </insert>
   <!--  -->
  <select id="selectAgency" parameterType="int" resultMap="AgencyResultMap">
    SELECT <include refid="Base_Column_List" /> from t_manager AS m LEFT JOIN t_manager_grade AS mg ON m.id=mg.managerId WHERE mg.parentId = #{id}
  </select>
  <select id="selectAllAgency" resultMap="AgencyResultMap">
    select <include refid="Base_Column_List" /> from t_manager as m left join t_manager_grade as mg on m.id = mg.managerId WHERE m.type=1 AND (mg.managerId is null or (mg.managerId is not null and mg.parentId is null))
  </select>
  <select id="selectPartAgency" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from t_manager as m left join t_manager_grade as mg on m.id = mg.managerId WHERE m.type=1 AND mg.managerId is null
  </select>
</mapper>
