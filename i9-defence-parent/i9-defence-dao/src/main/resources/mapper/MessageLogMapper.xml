<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="i9.defence.platform.dao.mapper.MessageLogMapper">
  <resultMap id="BaseResultMap" type="i9.defence.platform.model.MessageLog">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="templateNum" jdbcType="VARCHAR" property="templateNum" />
    <result column="sendStatus" jdbcType="INTEGER" property="sendStatus" />
    <result column="sendTime" jdbcType="DATE" property="sendTime" />
    <result column="phones" jdbcType="VARCHAR" property="phones" />
    <result column="clientNames" jdbcType="VARCHAR" property="clientNames" />
    <result column="signName" jdbcType="VARCHAR" property="signName" />
    <result column="sendResult" jdbcType="VARCHAR" property="sendResult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, templateNum, sendStatus, sendTime, phones, clientNames, signName, sendResult
  </sql>
  <select id="selectByExample" parameterType="i9.defence.platform.model.MessageLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_message_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="i9.defence.platform.model.MessageLogExample">
    delete from t_message_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="i9.defence.platform.model.MessageLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_message_log (templateNum, sendStatus, sendTime, 
      phones, clientNames, signName, 
      sendResult)
    values (#{templateNum,jdbcType=VARCHAR}, #{sendStatus,jdbcType=INTEGER}, #{sendTime,jdbcType=DATE}, 
      #{phones,jdbcType=VARCHAR}, #{clientNames,jdbcType=VARCHAR}, #{signName,jdbcType=VARCHAR}, 
      #{sendResult,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="i9.defence.platform.model.MessageLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_message_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateNum != null">
        templateNum,
      </if>
      <if test="sendStatus != null">
        sendStatus,
      </if>
      <if test="sendTime != null">
        sendTime,
      </if>
      <if test="phones != null">
        phones,
      </if>
      <if test="clientNames != null">
        clientNames,
      </if>
      <if test="signName != null">
        signName,
      </if>
      <if test="sendResult != null">
        sendResult,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateNum != null">
        #{templateNum,jdbcType=VARCHAR},
      </if>
      <if test="sendStatus != null">
        #{sendStatus,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=DATE},
      </if>
      <if test="phones != null">
        #{phones,jdbcType=VARCHAR},
      </if>
      <if test="clientNames != null">
        #{clientNames,jdbcType=VARCHAR},
      </if>
      <if test="signName != null">
        #{signName,jdbcType=VARCHAR},
      </if>
      <if test="sendResult != null">
        #{sendResult,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="i9.defence.platform.model.MessageLogExample" resultType="java.lang.Long">
    select count(*) from t_message_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_message_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.templateNum != null">
        templateNum = #{record.templateNum,jdbcType=VARCHAR},
      </if>
      <if test="record.sendStatus != null">
        sendStatus = #{record.sendStatus,jdbcType=INTEGER},
      </if>
      <if test="record.sendTime != null">
        sendTime = #{record.sendTime,jdbcType=DATE},
      </if>
      <if test="record.phones != null">
        phones = #{record.phones,jdbcType=VARCHAR},
      </if>
      <if test="record.clientNames != null">
        clientNames = #{record.clientNames,jdbcType=VARCHAR},
      </if>
      <if test="record.signName != null">
        signName = #{record.signName,jdbcType=VARCHAR},
      </if>
      <if test="record.sendResult != null">
        sendResult = #{record.sendResult,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_message_log
    set id = #{record.id,jdbcType=INTEGER},
      templateNum = #{record.templateNum,jdbcType=VARCHAR},
      sendStatus = #{record.sendStatus,jdbcType=INTEGER},
      sendTime = #{record.sendTime,jdbcType=DATE},
      phones = #{record.phones,jdbcType=VARCHAR},
      clientNames = #{record.clientNames,jdbcType=VARCHAR},
      signName = #{record.signName,jdbcType=VARCHAR},
      sendResult = #{record.sendResult,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>