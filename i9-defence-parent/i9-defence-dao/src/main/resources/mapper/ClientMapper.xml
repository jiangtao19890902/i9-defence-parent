<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="i9.defence.platform.dao.mapper.ClientMapper">
  <resultMap id="BaseResultMap" type="i9.defence.platform.model.Client">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="projectId" jdbcType="INTEGER" property="projectId" />
    <result column="territory" jdbcType="VARCHAR" property="territory" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <association property="project" column="projectId" javaType="i9.defence.platform.model.Project" select="selectByProjectId"></association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Query_By_Dto_Where_Clause">
    <trim prefix="WHERE"  prefixOverrides="AND|OR" >
        <if test="example.name != null and example.name != ''">
            OR name LIKE CONCAT(CONCAT('%','${example.name}'),'%' )
        </if>
        <if test="example.phone != null and example.phone != ''">
            OR phone LIKE CONCAT(CONCAT('%','${example.phone}'),'%' )
        </if>
        <if test="example.mail != null and example.mail != ''">
            OR mail LIKE CONCAT(CONCAT('%','${example.mail}'),'%' )
        </if>
    </trim>
  </sql>
  <sql id="Base_Column_List">
    id, name, createTime, projectId, territory, phone, address, mail
  </sql>
  <select id="selectByExample" parameterType="i9.defence.platform.model.ClientExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_client
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_client
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.List" >
    delete from t_client
    where id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
  </delete>
  <delete id="deleteByExample" parameterType="i9.defence.platform.model.ClientExample">
    delete from t_client
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="i9.defence.platform.model.Client">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_client (name, createTime, projectId, 
      territory, phone, address, 
      mail)
    values (#{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{projectId,jdbcType=INTEGER}, 
      #{territory,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{mail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="i9.defence.platform.model.Client">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_client
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="projectId != null">
        projectId,
      </if>
      <if test="territory != null">
        territory,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="mail != null">
        mail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="territory != null">
        #{territory,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="i9.defence.platform.model.ClientExample" resultType="java.lang.Long">
    select count(*) from t_client
    <if test="_parameter != null">
      <include refid="Query_By_Dto_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_client
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectId != null">
        projectId = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.territory != null">
        territory = #{record.territory,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null">
        mail = #{record.mail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_client
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      projectId = #{record.projectId,jdbcType=INTEGER},
      territory = #{record.territory,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      mail = #{record.mail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="i9.defence.platform.model.Client">
    update t_client
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectId != null">
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="territory != null">
        territory = #{territory,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="i9.defence.platform.model.Client">
    update t_client
    set name = #{name,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      projectId = #{projectId,jdbcType=INTEGER},
      territory = #{territory,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 分页查询 -->
  <select id="selectByLimitPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from t_client 
        <if test="_parameter != null" >
          <include refid="Query_By_Dto_Where_Clause" />
        </if>
        <if test="example.orderByClause != null" >
          order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
   </select>
   <!-- 查询关联项目 -->
   <select id="selectByProjectId" parameterType="int" resultType="i9.defence.platform.model.Project">
   	select * from t_project where id = #{id,jdbcType=INTEGER}
   </select>
   <!-- 查询全部负责人 -->
   <select id="selectAllClient" resultMap="BaseResultMap">
  	 select * from t_project
   </select>
</mapper>