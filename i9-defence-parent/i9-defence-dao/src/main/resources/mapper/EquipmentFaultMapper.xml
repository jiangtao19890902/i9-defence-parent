<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="i9.defence.platform.dao.mapper.EquipmentFaultMapper">
  <resultMap id="BaseResultMap" type="i9.defence.platform.model.EquipmentFault">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="equipmentId" jdbcType="INTEGER" property="equipmentId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="jhType" jdbcType="INTEGER" property="jhType" />
    <result column="activationOne" jdbcType="VARCHAR" property="activationOne" />
    <result column="activationTwo" jdbcType="VARCHAR" property="activationTwo" />
    <association property="equipmentName" column="equipmentId" jdbcType="VARCHAR" select="selectEquipmentByEquipmentId"></association>
  	<!--查询设备型号编号  -->
  	<association property="eqCategoryId" column="equipmentId" jdbcType="VARCHAR" select="selectEquipmentByEqCategoryId"></association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
     id, name, code, equipmentId, type, jhType, activationOne, activationTwo
  </sql>
  <select id="selectByExample" parameterType="i9.defence.platform.model.EquipmentFaultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_equipment_fault
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_equipment_fault
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.List" >
    delete from t_equipment_fault
    where id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
  </delete>
  <delete id="deleteByExample" parameterType="i9.defence.platform.model.EquipmentFaultExample">
    delete from t_equipment_fault
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="i9.defence.platform.model.EquipmentFault">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
   insert into t_equipment_fault (name, code, equipmentId, type, jhType, activationOne, activationTwo)
    values (#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{equipmentId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{jhType,jdbcType=INTEGER}, #{activationOne,jdbcType=VARCHAR}, #{activationTwo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="i9.defence.platform.model.EquipmentFault">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_equipment_fault
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="equipmentId != null">
        equipmentId,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="jhType != null">
        jhType,
      </if>
      <if test="activationOne != null">
        activationOne,
      </if>
      <if test="activationTwo != null">
        activationTwo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
       <if test="jhType != null">
        #{jhType,jdbcType=INTEGER},
      </if>
       <if test="activationOne != null">
        #{activationOne,jdbcType=VARCHAR},
      </if>
       <if test="activationTwo != null">
        #{activationTwo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="i9.defence.platform.model.EquipmentFaultExample" resultType="java.lang.Long">
    select count(*) from t_equipment_fault
    <if test="_parameter != null">
      <include refid="Query_By_Dto_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_equipment_fault
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentId != null">
        equipmentId = #{record.equipmentId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
       <if test="record.jhType != null">
        jhType = #{record.jhType,jdbcType=INTEGER},
      </if>
       <if test="record.activationOne != null">
        activationOne = #{record.activationOne,jdbcType=VARCHAR},
      </if>
       <if test="record.activationTwo != null">
        activationTwo = #{record.activationTwo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
     update t_equipment_fault
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      equipmentId = #{record.equipmentId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      jhType = #{record.jhType,jdbcType=INTEGER},
      activationOne = #{record.activationOne,jdbcType=VARCHAR},
      activationTwo = #{record.activationTwo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="i9.defence.platform.model.EquipmentFault">
    update t_equipment_fault
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null">
        equipmentId = #{equipmentId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="jhType != null">
        jhType = #{jhType,jdbcType=INTEGER},
      </if>
      <if test="activationOne != null">
        activationOne = #{activationOne,jdbcType=VARCHAR},
      </if>
       <if test="activationTwo != null">
        activationTwo = #{activationTwo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="i9.defence.platform.model.EquipmentFault">
     update t_equipment_fault
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      equipmentId = #{equipmentId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      jhType = #{jhType,jdbcType=INTEGER},
      activationOne = #{activationOne,jdbcType=VARCHAR},
      activationTwo = #{activationTwo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

	<sql id="Query_By_Dto_Where_Clause">
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="example.name != null and example.name != ''">
				OR( name LIKE CONCAT(CONCAT('%','${example.name}'),'%' )
			</if>
			<if test="example.code != null and example.code != ''">
				OR code LIKE CONCAT(CONCAT('%','${example.code}'),'%' ))
			</if>
		</trim>
	</sql>
	<!-- 分页查询 -->
  <select id="selectByLimitPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from t_equipment_fault 
        <if test="_parameter != null" >
          <include refid="Query_By_Dto_Where_Clause" />
        </if>
        limit #{offset},#{limit}
   </select>
	<!-- 查询设备名称By EquipmentId -->
	<select id="selectEquipmentByEquipmentId" parameterType="int" resultType="string">
		select systemType from t_equipment_systemtype where id = #{equipmentId,jdbcType=INTEGER}
	</select>
	<!--查询设备型号编号  -->
	<select id="selectEquipmentByEqCategoryId" parameterType="int" resultType="string">
		select eqCategoryId from t_equipment_category where id = #{equipmentId,jdbcType=INTEGER}
	</select>
	<!-- 查询故障代码和类型名称 -->
	<select id="getEquipmentId" resultType="i9.defence.platform.model.EquipmentFault" >
		SELECT * FROM `t_equipment_fault` where equipmentId = #{equipmentId,jdbcType=INTEGER} and  `code` = #{code,jdbcType=VARCHAR}
	</select>
</mapper>